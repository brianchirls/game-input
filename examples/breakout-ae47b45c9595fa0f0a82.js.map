{"version":3,"file":"examples/breakout-ae47b45c9595fa0f0a82.js","mappings":"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","sources":["webpack://@brianchirls/game-input/./examples/breakout.ts","webpack://@brianchirls/game-input/./src/devices/VirtualStick.ts","webpack://@brianchirls/game-input/./src/devices/virtualstick/domView.ts","webpack://@brianchirls/game-input/./src/interactions/Interaction.ts","webpack://@brianchirls/game-input/./src/interactions/PressInteraction.ts"],"sourcesContent":["import Gamepad from '../src/devices/Gamepad';\n// import Pointer from '../src/devices/Pointer';\nimport Keyboard from '../src/devices/Keyboard';\nimport AxisComposite from '../src/controls/AxisComposite';\nimport Action from '../src/Action';\nimport VirtualStick from '../src/devices/VirtualStick';\nimport domView from '../src/devices/virtualstick/domView';\n\nimport './breakout.css';\nimport PressInteraction from '../src/interactions/PressInteraction';\n\nconst canvas = document.createElement('canvas');\ndocument.body.appendChild(canvas);\nconst ctx = canvas.getContext('2d');\n\nconst scoreContainer = document.createElement('div');\nscoreContainer.id = 'score';\ndocument.body.appendChild(scoreContainer);\n\nconst livesContainer = document.createElement('div');\nlivesContainer.id = 'lives';\ndocument.body.appendChild(livesContainer);\n\nconst startButton = document.createElement('button');\nstartButton.id = 'start-button';\nstartButton.innerText = 'Start Game';\ndocument.body.appendChild(startButton);\n\n/**\n * Initialize Controls\n */\nconst gamepad = new Gamepad();\n// const pointer = new Pointer({\n// \ttouch: false\n// });\n\nconst kbd = new Keyboard({\n\tkeyCode: true\n});\nconst arrowKeys = new AxisComposite({\n\tnegative: kbd.getControl('arrowleft'),\n\tpositive: kbd.getControl('arrowright')\n});\nconst WASDKeys = new AxisComposite({\n\tnegative: kbd.getControl('KeyA'),\n\tpositive: kbd.getControl('KeyD')\n});\n\nconst virtualStick = new VirtualStick({\n\tlockY: true\n}).getControl();\ndomView(virtualStick);\n\nconst moveAction = new Action({\n\tbindings: [\n\t\tgamepad.getControl('leftStick').x,\n\t\tgamepad.getControl('rightStick').x,\n\t\tarrowKeys,\n\t\tWASDKeys,\n\t\tvirtualStick.x/*,\n\t\t{\n\t\t\tcontrol: pointer.getControl('delta').find('x'),\n\t\t\tprocessors: [\n\t\t\t\tval => val / 10\n\t\t\t]\n\t\t}*/\n\t]\n});\n\nconst pressStart = new PressInteraction(\n\tnew Action([\n\t\tgamepad.getControl('start'),\n\t\tkbd.getControl('Enter')\n\t])\n);\n\nconst sceneWidth = 480;\nconst sceneHeight = 320;\n\nconst canvasX = (x: number) => x / sceneWidth * canvas.width;\nconst canvasY = (y: number) => y / sceneHeight * canvas.height;\nconst canvasDistance = canvasX;\n\n// constants\nconst paddleSpeed = 500 / 1000; // pixels per 1000ms\nconst ballSpeed = 60 / 1000;\nconst ballRadius = 6;\nconst paddleHeight = 12;\nconst paddleWidth = 60;\nconst brickColumns = 10;\nconst brickRows = 5;\nconst brickWidth = 30;\nconst brickHeight = 12;\nconst brickPadding = 12;\nconst brickOffsetTop = 30;\nconst brickOffsetLeft = 30;\n\n// game state\nlet playing = false;\nlet x = sceneWidth / 2;\nlet y = sceneHeight - 30;\nlet dx = 2;\nlet dy = -2;\nlet paddleX = (sceneWidth - paddleWidth) / 2;\nlet score = 0;\nlet drawScale = 1;\nlet lives = 3;\n\nconst bricks = [];\n\nfunction drawBall() {\n\tctx.beginPath();\n\tctx.arc(canvasX(x), canvasY(y), canvasDistance(ballRadius), 0, Math.PI * 2);\n\tctx.fillStyle = '#CCC';\n\tctx.fill();\n\tctx.closePath();\n}\nfunction drawPaddle() {\n\tctx.beginPath();\n\tctx.rect(canvasX(paddleX), canvasY(sceneHeight - paddleHeight), canvasDistance(paddleWidth), canvasDistance(paddleHeight));\n\tctx.fillStyle = '#0095DD';\n\tctx.fill();\n\tctx.closePath();\n}\n\nfunction drawBricks() {\n\tfor (let row = 0; row < brickRows; row++) {\n\t\tconst hue = 300 * row / brickRows;\n\t\tctx.fillStyle = `hsl(${hue}, 90%, 50%)`;\n\t\tfor (let col = 0; col < brickColumns; col++) {\n\t\t\tif (bricks[row][col].status === 1) {\n\t\t\t\tconst brickX = col * (brickWidth + brickPadding) + brickOffsetLeft;\n\t\t\t\tconst brickY = row * (brickHeight + brickPadding) + brickOffsetTop;\n\t\t\t\tbricks[row][col].x = brickX;\n\t\t\t\tbricks[row][col].y = brickY;\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.rect(canvasX(brickX), canvasY(brickY), canvasDistance(brickWidth), canvasDistance(brickHeight));\n\t\t\t\t// ctx.fillStyle = '#0095DD';\n\t\t\t\tctx.fill();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\t\t}\n\t}\n}\nfunction drawScore() {\n\tscoreContainer.innerText = 'Score: ' + score;\n}\nfunction drawLives() {\n\tlivesContainer.innerText = 'Lives: ' + lives;\n}\n\nfunction initialize() {\n\tbricks.length = 0;\n\tfor (let c = 0; c < brickRows; c++) {\n\t\tbricks[c] = [];\n\t\tfor (let r = 0; r < brickColumns; r++) {\n\t\t\tbricks[c][r] = { x: 0, y: 0, status: 1 };\n\t\t}\n\t}\n\n\tplaying = false;\n\tx = sceneWidth / 2;\n\ty = sceneHeight - 30;\n\tdx = 2;\n\tdy = -2;\n\tpaddleX = (sceneWidth - paddleWidth) / 2;\n\tscore = 0;\n\tdrawScale = 1;\n\tlives = 3;\n}\n\nfunction startGame() {\n\tinitialize();\n\tplaying = true;\n\tstartButton.style.display = 'none';\n}\nstartButton.onclick = startGame;\n\nfunction endGame() {\n\tplaying = false;\n\tstartButton.style.display = '';\n}\n\nfunction draw() {\n\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\tdrawBricks();\n\tdrawBall();\n\tdrawPaddle();\n\tdrawScore();\n\tdrawLives();\n}\n\nlet last = performance.now();\nfunction update(t = performance.now()) {\n\tconst delta = t - last;\n\tlast = t;\n\n\tgamepad.update();\n\n\tpaddleX += moveAction.value * paddleSpeed * delta;\n\tpaddleX = Math.max(0, Math.min(paddleX, sceneWidth - paddleWidth));\n\n\tconst motionScale = ballSpeed * delta;\n\tx += dx * motionScale;\n\ty += dy * motionScale;\n\n\t// move ball\n\tif (x + dx > sceneWidth - ballRadius || x + dx < ballRadius) {\n\t\tdx = -dx;\n\t}\n\tif (y + dy < ballRadius) {\n\t\t// bounce against ceiling\n\t\tdy = -dy;\n\t} else if (y + dy > sceneHeight - ballRadius - paddleHeight && x > paddleX && x < paddleX + paddleWidth) {\n\t\t// bounce against paddle\n\t\tdy = -Math.abs(dy);\n\t} else if (y + dy > sceneHeight - ballRadius) {\n\t\tif (playing) {\n\t\t\tlives--;\n\t\t\tif (!lives) {\n\t\t\t\tconsole.log('GAME OVER');\n\t\t\t\tendGame();\n\t\t\t} else {\n\t\t\t\t// recent to paddle\n\t\t\t\tx = sceneWidth / 2;\n\t\t\t\ty = sceneHeight - 30;\n\t\t\t\tdx = 3;\n\t\t\t\tdy = -3;\n\t\t\t\tpaddleX = (sceneWidth - paddleWidth) / 2;\n\t\t\t}\n\t\t} else {\n\t\t\t//bounce against floor\n\t\t\tdy = -dy;\n\t\t}\n\t}\n\n\tif (playing) {\n\t\t// brick collision detection\n\t\tconst loX = x - ballRadius;\n\t\tconst hiX = x + ballRadius;\n\t\tconst loY = y - ballRadius;\n\t\tconst hiY = y + ballRadius;\n\t\tfor (let c = 0; c < brickRows; c++) {\n\t\t\tfor (let r = 0; r < brickColumns; r++) {\n\t\t\t\tconst b = bricks[c][r];\n\t\t\t\tif (b.status === 1) {\n\t\t\t\t\tif (hiX > b.x && loX < b.x + brickWidth && hiY > b.y && loY < b.y + brickHeight) {\n\t\t\t\t\t\tdy = -dy;\n\t\t\t\t\t\tb.status = 0;\n\t\t\t\t\t\tscore++;\n\t\t\t\t\t\tif (score === brickColumns * brickRows) {\n\t\t\t\t\t\t\tconsole.log('YOU WIN, CONGRATS!');\n\t\t\t\t\t\t\tendGame();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdraw();\n\n\trequestAnimationFrame(update);\n}\n\nfunction resize() {\n\tconst aspectRatio = sceneWidth / sceneHeight;\n\tconst screenAspectRatio = window.innerWidth / window.innerHeight;\n\tdrawScale = screenAspectRatio > aspectRatio ?\n\t\twindow.innerHeight / sceneHeight :\n\t\twindow.innerWidth / sceneWidth;\n\t// drawScale = Math.min(drawScale, 2);\n\tcanvas.width = drawScale * sceneWidth * devicePixelRatio;\n\tcanvas.height = drawScale * sceneHeight * devicePixelRatio;\n\t// todo: redraw?\n}\n\nresize();\ninitialize();\n\nupdate();\n\npressStart.on('complete', () => {\n\tif (!playing) {\n\t\tstartGame();\n\t}\n});\n","import StickInputControl, { StickInputControlOptions } from '../controls/StickInputControl';\nimport { Device, DeviceOptions } from '../Device';\n\nexport interface VirtualStickOptions extends DeviceOptions {\n\t/**\n\t * HTML element on which pointer events are registered\n\t * default: `document.body`\n\t */\n\telement?: HTMLElement;\n\n\t/**\n\t * radius: maximum distance from center point, at which the control is fully extended\n\t * default: `60`\n\t */\n\tradius?: number;\n\n\t/**\n\t * horizontal position on screen of center point (pixels)\n\t * default: `0`\n\t */\n\tx?: number;\n\n\t/**\n\t  * vertical position on screen of center point (pixels)\n\t  * default: `0`\n\t  */\n\ty?: number;\n\n\t/**\n\t * placement mode\n\t * - dynamic: center position is wherever the pointer started\n\t * - static: fixed center position, defined by `x` and `y`\n\t * default: `'dynamic'`\n\t */\n\tmode?: 'dynamic' | 'static';\n\n\t/**\n\t * If true, x value will always be zero. Used for vertical sliders.\n\t * default: `false`\n\t */\n\tlockX?: boolean;\n\n\t/**\n\t * If true, y value will always be zero. Used for horizontal sliders.\n\t * default: `false`\n\t */\n\tlockY?: boolean;\n\n\t/**\n\t * whether to respond to touch pointer events\n\t * default: `true`\n\t * */\n\ttouch?: boolean;\n\n\t/**\n\t * whether to respond to pen pointer events\n\t * default: `true`\n\t * */\n\tpen?: boolean;\n\n\t/**\n\t * whether to respond to mouse pointer events\n\t * default: `false`\n\t * */\n\tmouse?: boolean;\n\n\t/**\n\t * A callback function that receives the `pointerdown` event\n\t * and returns a boolean to determine whether to initiate\n\t * the virtual stick.\n\t *\n\t * This may be used to restrict a virtual stick to a certain\n\t * area of the screen or apply other constraints.\n\t */\n\tfilter?: (evt: PointerEvent) => boolean;\n\n\t/**\n\t * whether to set CSS `touch-action` to `'none'` on the element.\n\t * This prevents other browser drag events, like text highlighting.\n\t * default: `true`\n\t */\n\ttouchActionStyle?: boolean;\n}\n\nexport class VirtualStickInputControl extends StickInputControl {\n\tdeclare device: VirtualStick;\n}\n\n/**\n * An on-screen virtual stick device.\n *\n * A single stick control is provided per virtual device, regardless of\n * the name given.\n */\nexport default class VirtualStick extends Device {\n\t/**\n\t * Will always return a `StickInputControl`.\n\t * Name set on the control but is otherwise ignored.\n\t */\n\tdeclare getControl: (name?: string, options?: StickInputControlOptions) => VirtualStickInputControl;\n\n\t/**\n\t * horizontal position on screen of center point (pixels)\n\t */\n\tx: number;\n\n\t/**\n\t * vertical position on screen of center point (pixels)\n\t */\n\ty: number;\n\n\t/**\n\t * radius: maximum distance from center point, at which the control is fully extended\n\t */\n\tradius: number;\n\n\t/**\n\t * Type of pointer currently or most recently activating the virtual stick.\n\t * mouse, touch or pen\n\t */\n\treadonly pointerType: string;\n\n\t/**\n\t * placement mode\n\t * - dynamic: center position is wherever the pointer started\n\t * - static: fixed center position, defined by `x` and `y`\n\t */\n\treadonly mode: 'dynamic' | 'static';\n\n\t/**\n\t * time in milliseconds of the most recent change\n\t */\n\treadonly timestamp: number;\n\n\t/**\n\t * HTML element on which pointer events are registered\n\t */\n\treadonly element: HTMLElement;\n\n\tconstructor(options: VirtualStickOptions = {}) {\n\t\tsuper();\n\n\t\tconst {\n\t\t\telement = document.body,\n\t\t\tmode = 'dynamic',\n\t\t\tlockX = false,\n\t\t\tlockY = false,\n\t\t\ttouch = true,\n\t\t\tpen = true,\n\t\t\tmouse = false,\n\t\t\tfilter,\n\t\t\ttouchActionStyle = true\n\t\t} = options;\n\t\tlet {\n\t\t\tradius = 60,\n\t\t\tx = 0,\n\t\t\ty = 0,\n\t\t\tenabled = true\n\t\t} = options;\n\n\t\tlet startEvent: PointerEvent = null;\n\t\tlet lastEvent: PointerEvent = null;\n\t\tlet startX = 0;\n\t\tlet startY = 0;\n\t\tlet deltaX = 0;\n\t\tlet deltaY = 0;\n\n\t\tconst isStatic = mode === 'static';\n\t\tconst supported = mouse || pen || touch && navigator.maxTouchPoints > 0;\n\n\t\tconst allowedPointerTypes = {\n\t\t\tpen,\n\t\t\tmouse,\n\t\t\ttouch\n\t\t};\n\n\t\t/*\n\t\tFor now, each device only handles one pointer at a time\n\t\t*/\n\t\tfunction pointerDown(evt: PointerEvent) {\n\t\t\tif (!startEvent &&\n\t\t\t\tallowedPointerTypes[evt.pointerType] && (!filter || filter(evt))) {\n\n\t\t\t\tconst rect = element.getBoundingClientRect();\n\t\t\t\tif (isStatic) {\n\t\t\t\t\tconst dx = evt.clientX - rect.x - x;\n\t\t\t\t\tconst dy = evt.clientY - rect.y - y;\n\t\t\t\t\tif (Math.hypot(dx, dy) > radius) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstartX = x;\n\t\t\t\t\tstartY = y;\n\t\t\t\t} else {\n\t\t\t\t\tstartX = evt.clientX - rect.x;\n\t\t\t\t\tstartY = evt.clientY - rect.y;\n\t\t\t\t}\n\n\t\t\t\tstartEvent = evt;\n\t\t\t\tlastEvent = evt;\n\t\t\t}\n\t\t}\n\n\t\tconst pointerMove = (evt: PointerEvent) => {\n\t\t\tif (startEvent && startEvent.pointerId === evt.pointerId) {\n\t\t\t\tlastEvent = evt;\n\n\t\t\t\t// calculate and set x/y\n\t\t\t\tconst rect = element.getBoundingClientRect();\n\t\t\t\tconst dx = lockX ? 0 : evt.clientX - rect.x - startX;\n\t\t\t\tconst dy = lockY ? 0 : evt.clientY - rect.y - startY;\n\t\t\t\tconst length = Math.hypot(dx, dy);\n\n\t\t\t\tconst divisor = Math.max(length, radius);\n\t\t\t\tdeltaX = dx / divisor;\n\t\t\t\tdeltaY = -dy / divisor;\n\n\t\t\t\tthis.emit('change');\n\t\t\t}\n\t\t};\n\n\t\tconst pointerUp = (evt: PointerEvent) => {\n\t\t\tif (startEvent && startEvent.pointerId === evt.pointerId) {\n\t\t\t\tlastEvent = evt;\n\t\t\t\tstartEvent = null;\n\n\t\t\t\t/*\n\t\t\t\tRevert back to zero when we let go. Ideally, this would fall linearly\n\t\t\t\tover time, but that's complicated. It would require an update in the\n\t\t\t\tanimation loop and a configuration value for falloff rate.\n\t\t\t\t*/\n\t\t\t\tif (deltaX || deltaY) {\n\t\t\t\t\tdeltaX = 0;\n\t\t\t\t\tdeltaY = 0;\n\t\t\t\t\tthis.emit('change');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst styleElement = touchActionStyle && element.style ? element : document.body;\n\n\t\tfunction enable() {\n\t\t\tenabled = true;\n\t\t\tif (supported) {\n\n\t\t\t\tif (touchActionStyle) {\n\t\t\t\t\tstyleElement.style.touchAction = 'none';\n\t\t\t\t}\n\n\t\t\t\telement.addEventListener('pointerdown', pointerDown);\n\t\t\t\telement.addEventListener('pointermove', pointerMove);\n\t\t\t\telement.addEventListener('pointerup', pointerUp);\n\t\t\t\telement.addEventListener('pointercancel', pointerUp);\n\t\t\t}\n\t\t}\n\n\t\tfunction disable() {\n\t\t\tenabled = false;\n\t\t\tif (touchActionStyle) {\n\t\t\t\t// todo: only if it wasn't set before\n\t\t\t\tstyleElement.style.touchAction = '';\n\t\t\t}\n\n\t\t\telement.removeEventListener('pointerdown', pointerDown);\n\t\t\telement.removeEventListener('pointermove', pointerMove);\n\t\t\telement.removeEventListener('pointerup', pointerUp);\n\t\t\telement.removeEventListener('pointercancel', pointerUp);\n\t\t}\n\n\t\tthis.getControl = (name, options?: StickInputControlOptions) => {\n\t\t\t// if (typeof options === 'string') {\n\t\t\t// \tthrow new Error('VirtualJoystick accepts options object');\n\t\t\t// }\n\t\t\tconst read = () => {\n\t\t\t\treturn startEvent ?\n\t\t\t\t\t[deltaX, deltaY] as [number, number] :\n\t\t\t\t\tStickInputControl.defaultValue;\n\t\t\t};\n\n\t\t\treturn new VirtualStickInputControl(read, Object.assign(\n\t\t\t\t{\n\t\t\t\t\tname\n\t\t\t\t},\n\t\t\t\toptions,\n\t\t\t\t{\n\t\t\t\t\tdevice: this,\n\t\t\t\t\tactive: () => !!startEvent\n\t\t\t\t}\n\t\t\t));\n\t\t};\n\n\t\tthis.destroy = () => {\n\t\t\tdisable();\n\t\t};\n\n\t\tObject.defineProperties(this, {\n\t\t\tpointerType: {\n\t\t\t\tget: () => lastEvent && lastEvent.pointerType || ''\n\t\t\t},\n\n\t\t\tmode: {\n\t\t\t\tget: () => mode\n\t\t\t},\n\n\t\t\tconnected: {\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: false,\n\t\t\t\twritable: false,\n\t\t\t\tvalue: supported\n\t\t\t},\n\n\t\t\ttimestamp: {\n\t\t\t\tget: () => lastEvent && lastEvent.timeStamp || 0\n\t\t\t},\n\n\t\t\telement: {\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: false,\n\t\t\t\twritable: false,\n\t\t\t\tvalue: element\n\t\t\t},\n\n\t\t\tx: {\n\t\t\t\tget: () => isStatic ? x : startX,\n\t\t\t\tset: val => {\n\t\t\t\t\tx = val;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ty: {\n\t\t\t\tget: () => isStatic ? y : startY,\n\t\t\t\tset: val => {\n\t\t\t\t\ty = val;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tradius: {\n\t\t\t\tget: () => radius,\n\t\t\t\tset: val => {\n\t\t\t\t\tradius = val;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tenabled: {\n\t\t\t\tget: () => enabled,\n\t\t\t\tset(val) {\n\t\t\t\t\tif (!!val !== !!enabled) {\n\t\t\t\t\t\tif (val) {\n\t\t\t\t\t\t\tenable();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdisable();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabled) {\n\t\t\tenable();\n\t\t}\n\t}\n}\n","import VirtualStick, { VirtualStickInputControl } from '../VirtualStick';\n\nexport default function domView(\n\tcontrol: VirtualStickInputControl,\n\toptions: {\n\t\tinnerRadius?: number;\n\t\tparentElement?: HTMLElement;\n\t\toffsetElement?: HTMLElement;\n\t} = {}\n) {\n\tconst { device } = control;\n\tconst {\n\t\tinnerRadius = Math.max(24, device.radius / 4),\n\t\tparentElement = document.body,\n\t\toffsetElement = device instanceof VirtualStick ? device.element : document.body\n\t} = options;\n\n\tconst outer = document.createElement('div');\n\tObject.assign(outer.style, {\n\t\tposition: 'fixed',\n\t\tpointerEvents: 'none',\n\t\tborderRadius: 999e20 + 'px',\n\n\t\ttransition: 'opacity 0.1s',\n\n\t\t//temp\n\t\tbackgroundColor: 'rgba(128, 128, 128, 0.5)'\n\t});\n\n\tconst inner = document.createElement('div');\n\tObject.assign(inner.style, {\n\t\tposition: 'fixed',\n\t\tpointerEvents: 'none',\n\t\tborderRadius: 999e20 + 'px',\n\n\t\ttransition: 'opacity 0.1s',\n\n\t\t//temp\n\t\tbackgroundColor: 'rgba(128, 128, 128, 0.5)'\n\t});\n\touter.appendChild(inner);\n\n\tlet rafId = 0;\n\n\tfunction render() {\n\t\tconst [x, y] = control.read();\n\n\t\tif (control.device?.mode === 'static' || control.active()) {\n\t\t\tconst outerSize = device.radius * 2;\n\t\t\tconst rect = offsetElement.getBoundingClientRect();\n\t\t\tconst ox = device.x - device.radius + rect.x;\n\t\t\tconst oy = device.y - device.radius + rect.y;\n\n\t\t\touter.style.left = ox + 'px';\n\t\t\touter.style.top = oy + 'px';\n\t\t\touter.style.width = outer.style.height = outerSize + 'px';\n\t\t\touter.style.opacity = '1';\n\n\t\t\tconst innerSize = innerRadius * 2;\n\n\t\t\tconst ix = device.x + x * device.radius - innerRadius + rect.x;\n\t\t\tconst iy = device.y - y * device.radius - innerRadius + rect.y;\n\n\t\t\tinner.style.left = ix + 'px';\n\t\t\tinner.style.top = iy + 'px';\n\t\t\tinner.style.width = inner.style.height = innerSize + 'px';\n\t\t\tinner.style.opacity = '1';\n\t\t} else {\n\t\t\touter.style.opacity = '0';\n\t\t\tinner.style.opacity = '0';\n\t\t}\n\n\t\trafId = requestAnimationFrame(render);\n\t}\n\n\tparentElement.appendChild(outer);\n\n\trafId = requestAnimationFrame(render);\n\n\treturn {\n\t\tdestroy: () => {\n\t\t\tcancelAnimationFrame(rafId);\n\n\t\t\tif (outer.parentNode) {\n\t\t\t\touter.parentNode.removeChild(outer);\n\t\t\t}\n\t\t}\n\t};\n}\n","import Action from '../Action';\nimport EventEmitter from '../util/EventEmitter';\n\ntype InteractionState = 'disabled' | 'ready' | 'started' | 'complete';\n\ntype InteractionEvents = {\n\tcancel: unknown;\n\tdisable: unknown;\n\tready: unknown;\n\tenable: unknown;\n\tstart: unknown;\n\tcomplete: unknown;\n}\n\ntype InteractionEventKey = keyof InteractionEvents;\n\n// dest: source\nconst stateTransitions = {\n\tdisabled: {\n\t\tstarted: ['cancel', 'disable'],\n\t\t// complete: ['reset'],\n\t\t'*': ['disable']\n\t},\n\tready: {\n\t\tstarted: ['cancel', 'ready'],\n\t\t'*': ['ready']\n\t},\n\tstarted: {\n\t\tdisabled: ['enable', 'start'],\n\t\t'*': ['start']\n\t},\n\tcomplete: {\n\t\tdisabled: ['enable', 'start', 'complete'],\n\t\tstarted: ['complete'],\n\t\t'*': ['start', 'complete']\n\t}\n} as {\n\t[sourceState in InteractionState]: {\n\t\t[destState in InteractionState | '*']: InteractionEventKey[]\n\t}\n};\n\nexport default class Interaction<ActionType=any> extends EventEmitter<InteractionEvents> {\n\treadonly enabled: boolean;\n\treadonly action: Action<ActionType>;\n\treadonly state: InteractionState;\n\tupdate: () => void;\n\n\t// some interactions may use a specific action type, depending on whether they\n\t// use magnitude or value\n\tconstructor(action: Action<ActionType>) {\n\n\t\tif (!action) {\n\t\t\tthrow new Error('Interaction requires an Action');\n\t\t}\n\n\t\tsuper();\n\n\t\tlet destroyed = false;\n\t\tlet enabled = true;\n\t\tlet state: InteractionState = 'ready';\n\t\tlet value = 0;\n\n\t\tconst transition = (newState: InteractionState) => {\n\t\t\tif (state === newState) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst destState = stateTransitions[newState];\n\t\t\tconst events = destState[state] || destState['*'];\n\t\t\tstate = newState;\n\t\t\tevents.forEach(evt => this.emit(evt));\n\t\t};\n\n\t\tconst onChange = () => {\n\t\t\tvalue = enabled ? this.evaluate() : 0;\n\t\t\tif (value <= 0) {\n\t\t\t\ttransition('ready');\n\t\t\t} else if (value >= 1) {\n\t\t\t\ttransition('complete');\n\t\t\t} else {\n\t\t\t\ttransition('started');\n\t\t\t}\n\t\t};\n\n\t\taction.on('change', onChange);\n\t\taction.on('enable', onChange);\n\t\taction.on('disable', onChange);\n\n\t\tthis.update = onChange;\n\n\t\tconst destroyEventEmitter = this.destroy;\n\t\tthis.destroy = () => {\n\t\t\tdestroyed = true;\n\t\t\tenabled = false;\n\t\t\tdestroyEventEmitter();\n\t\t};\n\t\tthis.destroy = () => {\n\t\t\taction.off('change', onChange);\n\t\t\taction.off('enable', onChange);\n\t\t\taction.off('disable', onChange);\n\t\t\tdestroyEventEmitter();\n\t\t};\n\n\t\tObject.defineProperties(this, {\n\t\t\tenabled: {\n\t\t\t\tset(val) {\n\t\t\t\t\tval = !!val;\n\t\t\t\t\tif (val !== enabled && !destroyed) {\n\t\t\t\t\t\tenabled = val;\n\t\t\t\t\t\tif (enabled) {\n\t\t\t\t\t\t\t// todo: should we evaluate now?\n\t\t\t\t\t\t\ttransition('ready');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttransition('disabled');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tget: () => enabled\n\t\t\t},\n\t\t\taction: {\n\t\t\t\tget: () => action\n\t\t\t},\n\t\t\tstate: {\n\t\t\t\tget: () => state\n\t\t\t}\n\t\t});\n\t}\n\n\tevaluate(): number {\n\t\treturn (this.action.activeControl?.magnitude() || 0) > 0 ? 1 : 0;\n\t}\n}\n","import { Action } from '..';\nimport Interaction from './Interaction';\n\nexport default class PressInteraction extends Interaction<any> {\n\tpressPoint = 0.5;\n\n\tconstructor(action: Action<any>, pressPoint?: number) {\n\t\tsuper(action);\n\n\t\tif (pressPoint >= 0) {\n\t\t\tthis.pressPoint = pressPoint;\n\t\t}\n\t}\n\n\tevaluate(): number {\n\t\treturn (this.action.activeControl?.magnitude() || 0) >= this.pressPoint ? 1 : 0;\n\t}\n}\n"],"names":["canvas","document","createElement","body","appendChild","ctx","getContext","scoreContainer","id","livesContainer","startButton","innerText","gamepad","Gamepad","kbd","Keyboard","keyCode","arrowKeys","AxisComposite","negative","getControl","positive","WASDKeys","virtualStick","VirtualStick","lockY","domView","moveAction","Action","bindings","x","pressStart","PressInteraction","canvasX","width","canvasY","y","height","canvasDistance","playing","sceneWidth","sceneHeight","dx","dy","paddleX","score","drawScale","lives","bricks","initialize","length","c","r","status","startGame","style","display","endGame","draw","clearRect","row","hue","fillStyle","col","brickX","brickY","beginPath","rect","fill","closePath","drawBricks","arc","Math","PI","onclick","screenAspectRatio","last","performance","now","window","innerWidth","innerHeight","devicePixelRatio","update","t","delta","value","max","min","motionScale","abs","console","log","loX","hiX","loY","hiY","b","brickColumns","requestAnimationFrame","on","VirtualStickInputControl","StickInputControl","options","element","mode","lockX","touch","pen","mouse","filter","touchActionStyle","radius","enabled","startEvent","lastEvent","startX","startY","deltaX","deltaY","isStatic","supported","navigator","maxTouchPoints","allowedPointerTypes","pointerDown","evt","pointerType","getBoundingClientRect","clientX","clientY","hypot","pointerMove","pointerId","divisor","emit","pointerUp","styleElement","enable","touchAction","addEventListener","disable","removeEventListener","name","Object","assign","device","active","destroy","defineProperties","get","connected","enumerable","configurable","writable","timestamp","timeStamp","set","val","Device","control","innerRadius","parentElement","offsetElement","outer","position","pointerEvents","borderRadius","transition","backgroundColor","inner","rafId","render","read","outerSize","ox","oy","left","top","opacity","innerSize","ix","iy","cancelAnimationFrame","parentNode","removeChild","stateTransitions","disabled","started","ready","complete","action","pressPoint","this","activeControl","magnitude","Error","destroyed","state","newState","destState","events","forEach","onChange","evaluate","destroyEventEmitter","off","EventEmitter"],"sourceRoot":""}