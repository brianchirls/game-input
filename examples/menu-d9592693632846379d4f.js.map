{"version":3,"file":"examples/menu-d9592693632846379d4f.js","mappings":"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","sources":["webpack://@brianchirls/game-input/./examples/menu.ts","webpack://@brianchirls/game-input/./examples/menu.html","webpack://@brianchirls/game-input/./src/controls/DPadComposite.ts","webpack://@brianchirls/game-input/./src/interactions/Interaction.ts","webpack://@brianchirls/game-input/./src/interactions/PressInteraction.ts"],"sourcesContent":["import html from 'html-loader!./menu.html';\nimport { Action } from '../src';\nimport Gamepad from '../src/devices/Gamepad';\nimport Keyboard from '../src/devices/Keyboard';\nimport PressInteraction from '../src/interactions/PressInteraction';\nimport './menu.css';\n\ndocument.body.innerHTML = html;\n\n\n// Get relevant elements and collections\nconst tabbed = document.querySelector('.tabbed');\nconst tablist = tabbed.querySelector('ul');\nconst tabs = Array.from(tablist.querySelectorAll('a'));\nconst panels = Array.from(tabbed.querySelectorAll('section'));\n\nlet currentTabIndex = 0;\nfunction switchTabIndex(index: number) {\n\twhile (index < 0) {\n\t\tindex += tabs.length;\n\t}\n\tif (index >= tabs.length) {\n\t\tindex = index % tabs.length;\n\t}\n\n\tconst newTab = tabs[index];\n\tnewTab.focus();\n\n\t// Set the selected state\n\tnewTab.setAttribute('aria-selected', 'true');\n\n\tconst oldTab = tabs[currentTabIndex];\n\toldTab.removeAttribute('aria-selected');\n\n\t// Get the indices of the new and old tabs to find the correct\n\t// tab panels to show and hide\n\tpanels[currentTabIndex].hidden = true;\n\tpanels[index].hidden = false;\n\tcurrentTabIndex = index;\n\n}\nfunction switchTab(newTab: HTMLAnchorElement) {\n\tconst index = Array.prototype.indexOf.call(tabs, newTab);\n\tswitchTabIndex(index);\n}\n\n// Add the tablist role to the first <ul> in the .tabbed container\ntablist.setAttribute('role', 'tablist');\n\ntabs.forEach((tab, i) => {\n\ttab.setAttribute('role', 'tab');\n\ttab.setAttribute('id', 'tab' + (i + 1));\n\ttab.setAttribute('tabindex', '0');\n\ttab.parentElement.setAttribute('role', 'presentation');\n\n\t// Handle clicking of tabs for mouse users\n\ttab.addEventListener('click', e => {\n\t\te.preventDefault();\n\t\tswitchTab(tab);\n\t});\n});\n\n// Add tab panel semantics and hide them all\npanels.forEach((panel, i) => {\n\tpanel.setAttribute('role', 'tabpanel');\n\tpanel.setAttribute('aria-labelledby', tabs[i].id);\n\tpanel.hidden = true;\n});\n\n// Initially activate the first tab and reveal the first tab panel\n// tabs[0].removeAttribute('tabindex');\ntabs[0].setAttribute('aria-selected', 'true');\npanels[0].hidden = false;\n\n\n// Devices\nconst gamepad = new Gamepad();\nconst kbd = new Keyboard({ keyCode: true });\n\n// Interactions\nconst tabLeft = new PressInteraction(new Action([\n\tkbd.getControl('PageUp'),\n\tgamepad.getControl('L1')\n]));\nconst tabRight = new PressInteraction(new Action([\n\tkbd.getControl('PageDown'),\n\tgamepad.getControl('R1')\n]));\n// const itemUp = new PressInteraction(new Action([\n// \tkbd.getControl('ArrowUp'),\n// \tgamepad.getControl('dpadUp')\n// ]));\n// const itemDown = new PressInteraction(new Action([\n// \tkbd.getControl('ArrowDown'),\n// \tgamepad.getControl('dpadDown')\n// ]));\n\ntabLeft.on('complete', () => switchTabIndex(currentTabIndex - 1));\ntabRight.on('complete', () => switchTabIndex(currentTabIndex + 1));\n\nfunction update() {\n\tgamepad.update();\n\tsetTimeout(update, 8);\n}\nupdate();\n","// Module\nvar code = \"<div class=\\\"tabbed\\\"> <ul> <li> <a href=\\\"#section1\\\">Section 1</a> </li> <li> <a href=\\\"#section2\\\">Section 2</a> </li> <li> <a href=\\\"#section3\\\">Section 3</a> </li> <li> <a href=\\\"#section4\\\">Section 4</a> </li> </ul> <section id=\\\"section1\\\"> <h2>Section 1</h2> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam euismod, tortor nec pharetra ultricies, ante erat imperdiet velit, nec laoreet enim lacus a velit. <a href=\\\"#\\\">Nam luctus</a>, enim in interdum condimentum, nisl diam iaculis lorem, vel volutpat mi leo sit amet lectus. Praesent non odio bibendum magna bibendum accumsan.</p> </section> <section id=\\\"section2\\\" hidden> <h2>Section 2</h2> <p>Nullam at diam nec arcu suscipit auctor non a erat. Sed et magna semper, eleifend magna non, facilisis nisl. Proin et est et lorem dictum finibus ut nec turpis. Aenean nisi tortor, euismod a mauris a, mattis scelerisque tortor. Sed dolor risus, varius a nibh id, condimentum lacinia est. In lacinia cursus odio a aliquam. Curabitur tortor magna, laoreet ut rhoncus at, sodales consequat tellus.</p> </section> <section id=\\\"section3\\\" hidden> <h2>Section 3</h2> <p>Phasellus ac tristique orci. Nulla maximus <a href=\\\"\\\">justo nec dignissim consequat</a>. Sed vehicula diam sit amet mi efficitur vehicula in in nisl. Aliquam erat volutpat. Suspendisse lorem turpis, accumsan consequat consectetur gravida, <a href=\\\"#\\\">pellentesque ac ante</a>. Aliquam in commodo ligula, sit amet mollis neque. Vestibulum at facilisis massa.</p> </section> <section id=\\\"section4\\\" hidden> <h2>Section 4</h2> <p>Nam luctus, enim in interdum condimentum, nisl diam iaculis lorem, vel volutpat mi leo sit amet lectus. Praesent non odio bibendum magna bibendum accumsan. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam euismod, tortor nec pharetra ultricies, ante erat imperdiet velit, nec laoreet enim lacus a velit. </p> </section> </div> <section> <p>Switch through the tabs by any of the following:</p> <ul> <li>Click directly on each tab with the pointer (mouse, pen or touch)</li> <li>Left and right \\\"shoulder\\\" buttons on a <strong>gamepad</strong>. i.e. \\\"L1\\\" or \\\"R1\\\"</li> <li>Page-Down or Page-Up keys on <strong>keyboard</strong></li> <li>Cycle through all controls with the tab key. Hit Enter key to activate selected tab. Note: May not work on Mac without <a href=\\\"https://support.apple.com/en-us/HT204434\\\">changing keyboard settings.</a></li> </ul> </section> \";\n// Exports\nexport default code;","import AxisInputControl from './AxisInputControl';\nimport Vector2InputControl, { Vector2InputControlOptions } from './Vector2InputControl';\n\ninterface DPadInputControlOptions extends Vector2InputControlOptions {\n\tleft: AxisInputControl;\n\tright: AxisInputControl;\n\tup: AxisInputControl;\n\tdown: AxisInputControl;\n}\n\nexport default class DPadComposite extends Vector2InputControl {\n\tconstructor({\n\t\tleft,\n\t\tright,\n\t\tup,\n\t\tdown,\n\t\t...opts\n\t}: DPadInputControlOptions) {\n\t\tconst read: () => [number, number] = () => {\n\t\t\tconst x = this.children.get('right').read() - this.children.get('left').read();\n\t\t\tconst y = this.children.get('up').read() - this.children.get('down').read();\n\t\t\treturn [x, y];\n\t\t};\n\t\tsuper(read, opts);\n\n\t\tthis.children.set('left', left);\n\t\tthis.children.set('right', right);\n\t\tthis.children.set('up', up);\n\t\tthis.children.set('down', down);\n\n\t\tconst onChange = () => this.emit('change');\n\t\tthis.children.forEach(child => {\n\t\t\tchild.on('change', onChange);\n\t\t});\n\t}\n}\n","import Action from '../Action';\nimport EventEmitter from '../util/EventEmitter';\n\ntype InteractionState = 'disabled' | 'ready' | 'started' | 'complete';\n\ntype InteractionEvents = {\n\tcancel: unknown;\n\tdisable: unknown;\n\tready: unknown;\n\tenable: unknown;\n\tstart: unknown;\n\tcomplete: unknown;\n}\n\ntype InteractionEventKey = keyof InteractionEvents;\n\n// dest: source\nconst stateTransitions = {\n\tdisabled: {\n\t\tstarted: ['cancel', 'disable'],\n\t\t// complete: ['reset'],\n\t\t'*': ['disable']\n\t},\n\tready: {\n\t\tstarted: ['cancel', 'ready'],\n\t\t'*': ['ready']\n\t},\n\tstarted: {\n\t\tdisabled: ['enable', 'start'],\n\t\t'*': ['start']\n\t},\n\tcomplete: {\n\t\tdisabled: ['enable', 'start', 'complete'],\n\t\tstarted: ['complete'],\n\t\t'*': ['start', 'complete']\n\t}\n} as {\n\t[sourceState in InteractionState]: {\n\t\t[destState in InteractionState | '*']: InteractionEventKey[]\n\t}\n};\n\nexport default class Interaction<ActionType=any> extends EventEmitter<InteractionEvents> {\n\treadonly enabled: boolean;\n\treadonly action: Action<ActionType>;\n\treadonly state: InteractionState;\n\tupdate: () => void;\n\n\t// some interactions may use a specific action type, depending on whether they\n\t// use magnitude or value\n\tconstructor(action: Action<ActionType>) {\n\n\t\tif (!action) {\n\t\t\tthrow new Error('Interaction requires an Action');\n\t\t}\n\n\t\tsuper();\n\n\t\tlet destroyed = false;\n\t\tlet enabled = true;\n\t\tlet state: InteractionState = 'ready';\n\t\tlet value = 0;\n\n\t\tconst transition = (newState: InteractionState) => {\n\t\t\tif (state === newState) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst destState = stateTransitions[newState];\n\t\t\tconst events = destState[state] || destState['*'];\n\t\t\tstate = newState;\n\t\t\tevents.forEach(evt => this.emit(evt));\n\t\t};\n\n\t\tconst onChange = () => {\n\t\t\tvalue = enabled ? this.evaluate() : 0;\n\t\t\tif (value <= 0) {\n\t\t\t\ttransition('ready');\n\t\t\t} else if (value >= 1) {\n\t\t\t\ttransition('complete');\n\t\t\t} else {\n\t\t\t\ttransition('started');\n\t\t\t}\n\t\t};\n\n\t\taction.on('change', onChange);\n\t\taction.on('enable', onChange);\n\t\taction.on('disable', onChange);\n\n\t\tthis.update = onChange;\n\n\t\tconst destroyEventEmitter = this.destroy;\n\t\tthis.destroy = () => {\n\t\t\tdestroyed = true;\n\t\t\tenabled = false;\n\t\t\tdestroyEventEmitter();\n\t\t};\n\t\tthis.destroy = () => {\n\t\t\taction.off('change', onChange);\n\t\t\taction.off('enable', onChange);\n\t\t\taction.off('disable', onChange);\n\t\t\tdestroyEventEmitter();\n\t\t};\n\n\t\tObject.defineProperties(this, {\n\t\t\tenabled: {\n\t\t\t\tset(val) {\n\t\t\t\t\tval = !!val;\n\t\t\t\t\tif (val !== enabled && !destroyed) {\n\t\t\t\t\t\tenabled = val;\n\t\t\t\t\t\tif (enabled) {\n\t\t\t\t\t\t\t// todo: should we evaluate now?\n\t\t\t\t\t\t\ttransition('ready');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttransition('disabled');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tget: () => enabled\n\t\t\t},\n\t\t\taction: {\n\t\t\t\tget: () => action\n\t\t\t},\n\t\t\tstate: {\n\t\t\t\tget: () => state\n\t\t\t}\n\t\t});\n\t}\n\n\tevaluate(): number {\n\t\treturn (this.action.activeControl?.magnitude() || 0) > 0 ? 1 : 0;\n\t}\n}\n","import { Action } from '..';\nimport Interaction from './Interaction';\n\nexport default class PressInteraction extends Interaction<any> {\n\tpressPoint = 0.5;\n\n\tconstructor(action: Action<any>, pressPoint?: number) {\n\t\tsuper(action);\n\n\t\tif (pressPoint >= 0) {\n\t\t\tthis.pressPoint = pressPoint;\n\t\t}\n\t}\n\n\tevaluate(): number {\n\t\treturn (this.action.activeControl?.magnitude() || 0) >= this.pressPoint ? 1 : 0;\n\t}\n}\n"],"names":["document","body","innerHTML","tabbed","querySelector","tablist","tabs","Array","from","querySelectorAll","panels","currentTabIndex","switchTabIndex","index","length","newTab","focus","setAttribute","removeAttribute","hidden","forEach","tab","i","parentElement","addEventListener","e","preventDefault","prototype","indexOf","call","panel","id","gamepad","Gamepad","kbd","Keyboard","keyCode","tabLeft","PressInteraction","Action","getControl","tabRight","on","update","setTimeout","DPadComposite","left","right","up","down","opts","children","get","read","set","onChange","emit","child","Vector2InputControl","stateTransitions","disabled","started","ready","complete","action","pressPoint","this","activeControl","magnitude","Error","destroyed","enabled","state","value","transition","newState","destState","events","evt","evaluate","destroyEventEmitter","destroy","off","Object","defineProperties","val","EventEmitter"],"sourceRoot":""}