{"version":3,"file":"examples/simple-a212e0a040dab9bbf6be.js","mappings":"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","sources":["webpack://@brianchirls/game-input/./examples/simple.ts","webpack://@brianchirls/game-input/./examples/simple.html","webpack://@brianchirls/game-input/./src/controls/DPadComposite.ts","webpack://@brianchirls/game-input/./src/devices/VirtualStick.ts","webpack://@brianchirls/game-input/./src/devices/virtualstick/domView.ts"],"sourcesContent":["import html from 'html-loader!./simple.html';\nimport Gamepad from '../src/devices/Gamepad';\nimport Keyboard from '../src/devices/Keyboard';\nimport DPadComposite from '../src/controls/DPadComposite';\nimport AxisComposite from '../src/controls/AxisComposite';\nimport Action from '../src/Action';\nimport VirtualStick from '../src/devices/VirtualStick';\nimport domView from '../src/devices/virtualstick/domView';\n\ndocument.body.innerHTML = html;\n\n/**\n * Devices\n */\nconst gamepad = new Gamepad();\nconst kbd = new Keyboard({\n\t/*\n\t`keyCode` option makes this work on different layouts so WASD becomes\n\tZQSD on \"AZERTY\" (e.g., French) keyboards.\n\t*/\n\tkeyCode: true\n});\nconst leftTouch = new VirtualStick({\n\t// constrain to left side of screen\n\tfilter: evt => evt.pageX < Math.max(200, window.innerWidth * 0.4)\n});\nconst rightTouch = new VirtualStick({\n\t// constrain to right side of screen\n\tfilter: evt => evt.pageX > window.innerWidth - Math.max(200, window.innerWidth * 0.4)\n});\n\n/**\n * Controls\n */\nconst leftStick = gamepad.getControl('leftStick');\nconst rightStickHoriz = gamepad.getControl('rightStick').x;\n\nconst kbdWASD = new DPadComposite({\n\tup: kbd.getControl('KeyW'),\n\tleft: kbd.getControl('KeyA'),\n\tdown: kbd.getControl('KeyS'),\n\tright: kbd.getControl('KeyD')\n});\n\nconst rotateArrowKeys = new AxisComposite({\n\tnegative: kbd.getControl('ArrowLeft'),\n\tpositive: kbd.getControl('ArrowRight')\n});\n\nconst leftTouchStick = leftTouch.getControl();\nconst rightTouchStick = rightTouch.getControl();\n\n/**\n * Actions\n */\nconst moveAction = new Action({\n\tbindings: [\n\t\tleftStick,\n\t\tkbdWASD,\n\t\tleftTouchStick\n\t]\n});\n\nconst rotateAction = new Action({\n\tbindings: [\n\t\trightStickHoriz,\n\t\trotateArrowKeys,\n\t\trightTouchStick.x\n\t]\n});\n\nconst thing = document.getElementById('thing');\n\nconst speed = 300 / 1000; // pixels per 1000ms\nconst rotSpeed = 420 / 1000; // degrees per 1000ms\nlet x = 100;\nlet y = 100;\nlet r = 0;\n\nlet last = performance.now();\nfunction update(t = performance.now()) {\n\tconst delta = t - last;\n\tlast = t;\n\n\t// gamepad is a polling device and won't work unless we update on every frame\n\tgamepad.update();\n\n\tconst [dx, dy] = moveAction.value;\n\tconst dr = rotateAction.value;\n\n\tconst motionScale = speed * delta;\n\tx += dx * motionScale;\n\ty -= dy * motionScale;\n\n\tr += dr * rotSpeed * delta;\n\n\t// render\n\tthing.style.transform = `translate(${x}px, ${y}px) rotate(${r}deg)`;\n\trequestAnimationFrame(update);\n}\n\n// visualize virtual sticks\ndomView(leftTouchStick);\ndomView(rightTouchStick);\n\nupdate();\n","// Module\nvar code = \"<style>#thing{position:absolute;width:60px;height:90px;margin:-30px -45px}#controls{position:fixed;top:20px;right:20px;border:1px solid #fff;background-color:rgba(0,0,0,.6);color:#fff;display:flex;flex-direction:column;padding:20px}#instructions{position:absolute;bottom:0;left:0;padding:1em;background-color:rgba(125,125,125,.5)}</style> <svg id=\\\"thing\\\" viewbox=\\\"0 0 40 60\\\"> <polygon points=\\\"20,0 0,60 40,60\\\" style=\\\"fill:rebeccapurple\\\"/> </svg> <div id=\\\"instructions\\\"> <p>Move: left gamepad stick, WASD keys or left virtual stick</p> <p>Rotate: right gamepad stick, left/right arrow keys or right virtual stick</p> </div> \";\n// Exports\nexport default code;","import AxisInputControl from './AxisInputControl';\nimport Vector2InputControl, { Vector2InputControlOptions } from './Vector2InputControl';\n\ninterface DPadInputControlOptions extends Vector2InputControlOptions {\n\tleft: AxisInputControl;\n\tright: AxisInputControl;\n\tup: AxisInputControl;\n\tdown: AxisInputControl;\n}\n\nexport default class DPadComposite extends Vector2InputControl {\n\tconstructor({\n\t\tleft,\n\t\tright,\n\t\tup,\n\t\tdown,\n\t\t...opts\n\t}: DPadInputControlOptions) {\n\t\tconst read: () => [number, number] = () => {\n\t\t\tconst x = this.children.get('right').read() - this.children.get('left').read();\n\t\t\tconst y = this.children.get('up').read() - this.children.get('down').read();\n\t\t\treturn [x, y];\n\t\t};\n\t\tsuper(read, opts);\n\n\t\tthis.children.set('left', left);\n\t\tthis.children.set('right', right);\n\t\tthis.children.set('up', up);\n\t\tthis.children.set('down', down);\n\n\t\tconst onChange = () => this.emit('change');\n\t\tthis.children.forEach(child => {\n\t\t\tchild.on('change', onChange);\n\t\t});\n\t}\n}\n","import StickInputControl, { StickInputControlOptions } from '../controls/StickInputControl';\nimport { Device, DeviceOptions } from '../Device';\n\nexport interface VirtualStickOptions extends DeviceOptions {\n\t/**\n\t * HTML element on which pointer events are registered\n\t * default: `document.body`\n\t */\n\telement?: HTMLElement;\n\n\t/**\n\t * radius: maximum distance from center point, at which the control is fully extended\n\t * default: `60`\n\t */\n\tradius?: number;\n\n\t/**\n\t * horizontal position on screen of center point (pixels)\n\t * default: `0`\n\t */\n\tx?: number;\n\n\t/**\n\t  * vertical position on screen of center point (pixels)\n\t  * default: `0`\n\t  */\n\ty?: number;\n\n\t/**\n\t * placement mode\n\t * - dynamic: center position is wherever the pointer started\n\t * - static: fixed center position, defined by `x` and `y`\n\t * default: `'dynamic'`\n\t */\n\tmode?: 'dynamic' | 'static';\n\n\t/**\n\t * If true, x value will always be zero. Used for vertical sliders.\n\t * default: `false`\n\t */\n\tlockX?: boolean;\n\n\t/**\n\t * If true, y value will always be zero. Used for horizontal sliders.\n\t * default: `false`\n\t */\n\tlockY?: boolean;\n\n\t/**\n\t * whether to respond to touch pointer events\n\t * default: `true`\n\t * */\n\ttouch?: boolean;\n\n\t/**\n\t * whether to respond to pen pointer events\n\t * default: `true`\n\t * */\n\tpen?: boolean;\n\n\t/**\n\t * whether to respond to mouse pointer events\n\t * default: `false`\n\t * */\n\tmouse?: boolean;\n\n\t/**\n\t * A callback function that receives the `pointerdown` event\n\t * and returns a boolean to determine whether to initiate\n\t * the virtual stick.\n\t *\n\t * This may be used to restrict a virtual stick to a certain\n\t * area of the screen or apply other constraints.\n\t */\n\tfilter?: (evt: PointerEvent) => boolean;\n\n\t/**\n\t * whether to set CSS `touch-action` to `'none'` on the element.\n\t * This prevents other browser drag events, like text highlighting.\n\t * default: `true`\n\t */\n\ttouchActionStyle?: boolean;\n}\n\nexport class VirtualStickInputControl extends StickInputControl {\n\tdeclare device: VirtualStick;\n}\n\n/**\n * An on-screen virtual stick device.\n *\n * A single stick control is provided per virtual device, regardless of\n * the name given.\n */\nexport default class VirtualStick extends Device {\n\t/**\n\t * Will always return a `StickInputControl`.\n\t * Name set on the control but is otherwise ignored.\n\t */\n\tdeclare getControl: (name?: string, options?: StickInputControlOptions) => VirtualStickInputControl;\n\n\t/**\n\t * horizontal position on screen of center point (pixels)\n\t */\n\tx: number;\n\n\t/**\n\t * vertical position on screen of center point (pixels)\n\t */\n\ty: number;\n\n\t/**\n\t * radius: maximum distance from center point, at which the control is fully extended\n\t */\n\tradius: number;\n\n\t/**\n\t * Type of pointer currently or most recently activating the virtual stick.\n\t * mouse, touch or pen\n\t */\n\treadonly pointerType: string;\n\n\t/**\n\t * placement mode\n\t * - dynamic: center position is wherever the pointer started\n\t * - static: fixed center position, defined by `x` and `y`\n\t */\n\treadonly mode: 'dynamic' | 'static';\n\n\t/**\n\t * time in milliseconds of the most recent change\n\t */\n\treadonly timestamp: number;\n\n\t/**\n\t * HTML element on which pointer events are registered\n\t */\n\treadonly element: HTMLElement;\n\n\tconstructor(options: VirtualStickOptions = {}) {\n\t\tsuper();\n\n\t\tconst {\n\t\t\telement = document.body,\n\t\t\tmode = 'dynamic',\n\t\t\tlockX = false,\n\t\t\tlockY = false,\n\t\t\ttouch = true,\n\t\t\tpen = true,\n\t\t\tmouse = false,\n\t\t\tfilter,\n\t\t\ttouchActionStyle = true\n\t\t} = options;\n\t\tlet {\n\t\t\tradius = 60,\n\t\t\tx = 0,\n\t\t\ty = 0,\n\t\t\tenabled = true\n\t\t} = options;\n\n\t\tlet startEvent: PointerEvent = null;\n\t\tlet lastEvent: PointerEvent = null;\n\t\tlet startX = 0;\n\t\tlet startY = 0;\n\t\tlet deltaX = 0;\n\t\tlet deltaY = 0;\n\n\t\tconst isStatic = mode === 'static';\n\t\tconst supported = mouse || pen || touch && navigator.maxTouchPoints > 0;\n\n\t\tconst allowedPointerTypes = {\n\t\t\tpen,\n\t\t\tmouse,\n\t\t\ttouch\n\t\t};\n\n\t\t/*\n\t\tFor now, each device only handles one pointer at a time\n\t\t*/\n\t\tfunction pointerDown(evt: PointerEvent) {\n\t\t\tif (!startEvent &&\n\t\t\t\tallowedPointerTypes[evt.pointerType] && (!filter || filter(evt))) {\n\n\t\t\t\tconst rect = element.getBoundingClientRect();\n\t\t\t\tif (isStatic) {\n\t\t\t\t\tconst dx = evt.clientX - rect.x - x;\n\t\t\t\t\tconst dy = evt.clientY - rect.y - y;\n\t\t\t\t\tif (Math.hypot(dx, dy) > radius) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstartX = x;\n\t\t\t\t\tstartY = y;\n\t\t\t\t} else {\n\t\t\t\t\tstartX = evt.clientX - rect.x;\n\t\t\t\t\tstartY = evt.clientY - rect.y;\n\t\t\t\t}\n\n\t\t\t\tstartEvent = evt;\n\t\t\t\tlastEvent = evt;\n\t\t\t}\n\t\t}\n\n\t\tconst pointerMove = (evt: PointerEvent) => {\n\t\t\tif (startEvent && startEvent.pointerId === evt.pointerId) {\n\t\t\t\tlastEvent = evt;\n\n\t\t\t\t// calculate and set x/y\n\t\t\t\tconst rect = element.getBoundingClientRect();\n\t\t\t\tconst dx = lockX ? 0 : evt.clientX - rect.x - startX;\n\t\t\t\tconst dy = lockY ? 0 : evt.clientY - rect.y - startY;\n\t\t\t\tconst length = Math.hypot(dx, dy);\n\n\t\t\t\tconst divisor = Math.max(length, radius);\n\t\t\t\tdeltaX = dx / divisor;\n\t\t\t\tdeltaY = -dy / divisor;\n\n\t\t\t\tthis.emit('change');\n\t\t\t}\n\t\t};\n\n\t\tconst pointerUp = (evt: PointerEvent) => {\n\t\t\tif (startEvent && startEvent.pointerId === evt.pointerId) {\n\t\t\t\tlastEvent = evt;\n\t\t\t\tstartEvent = null;\n\n\t\t\t\t/*\n\t\t\t\tRevert back to zero when we let go. Ideally, this would fall linearly\n\t\t\t\tover time, but that's complicated. It would require an update in the\n\t\t\t\tanimation loop and a configuration value for falloff rate.\n\t\t\t\t*/\n\t\t\t\tif (deltaX || deltaY) {\n\t\t\t\t\tdeltaX = 0;\n\t\t\t\t\tdeltaY = 0;\n\t\t\t\t\tthis.emit('change');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst styleElement = touchActionStyle && element.style ? element : document.body;\n\n\t\tfunction enable() {\n\t\t\tenabled = true;\n\t\t\tif (supported) {\n\n\t\t\t\tif (touchActionStyle) {\n\t\t\t\t\tstyleElement.style.touchAction = 'none';\n\t\t\t\t}\n\n\t\t\t\telement.addEventListener('pointerdown', pointerDown);\n\t\t\t\telement.addEventListener('pointermove', pointerMove);\n\t\t\t\telement.addEventListener('pointerup', pointerUp);\n\t\t\t\telement.addEventListener('pointercancel', pointerUp);\n\t\t\t}\n\t\t}\n\n\t\tfunction disable() {\n\t\t\tenabled = false;\n\t\t\tif (touchActionStyle) {\n\t\t\t\t// todo: only if it wasn't set before\n\t\t\t\tstyleElement.style.touchAction = '';\n\t\t\t}\n\n\t\t\telement.removeEventListener('pointerdown', pointerDown);\n\t\t\telement.removeEventListener('pointermove', pointerMove);\n\t\t\telement.removeEventListener('pointerup', pointerUp);\n\t\t\telement.removeEventListener('pointercancel', pointerUp);\n\t\t}\n\n\t\tthis.getControl = (name, options?: StickInputControlOptions) => {\n\t\t\t// if (typeof options === 'string') {\n\t\t\t// \tthrow new Error('VirtualJoystick accepts options object');\n\t\t\t// }\n\t\t\tconst read = () => {\n\t\t\t\treturn startEvent ?\n\t\t\t\t\t[deltaX, deltaY] as [number, number] :\n\t\t\t\t\tStickInputControl.defaultValue;\n\t\t\t};\n\n\t\t\treturn new VirtualStickInputControl(read, Object.assign(\n\t\t\t\t{\n\t\t\t\t\tname\n\t\t\t\t},\n\t\t\t\toptions,\n\t\t\t\t{\n\t\t\t\t\tdevice: this,\n\t\t\t\t\tactive: () => !!startEvent\n\t\t\t\t}\n\t\t\t));\n\t\t};\n\n\t\tthis.destroy = () => {\n\t\t\tdisable();\n\t\t};\n\n\t\tObject.defineProperties(this, {\n\t\t\tpointerType: {\n\t\t\t\tget: () => lastEvent && lastEvent.pointerType || ''\n\t\t\t},\n\n\t\t\tmode: {\n\t\t\t\tget: () => mode\n\t\t\t},\n\n\t\t\tconnected: {\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: false,\n\t\t\t\twritable: false,\n\t\t\t\tvalue: supported\n\t\t\t},\n\n\t\t\ttimestamp: {\n\t\t\t\tget: () => lastEvent && lastEvent.timeStamp || 0\n\t\t\t},\n\n\t\t\telement: {\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: false,\n\t\t\t\twritable: false,\n\t\t\t\tvalue: element\n\t\t\t},\n\n\t\t\tx: {\n\t\t\t\tget: () => isStatic ? x : startX,\n\t\t\t\tset: val => {\n\t\t\t\t\tx = val;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ty: {\n\t\t\t\tget: () => isStatic ? y : startY,\n\t\t\t\tset: val => {\n\t\t\t\t\ty = val;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tradius: {\n\t\t\t\tget: () => radius,\n\t\t\t\tset: val => {\n\t\t\t\t\tradius = val;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tenabled: {\n\t\t\t\tget: () => enabled,\n\t\t\t\tset(val) {\n\t\t\t\t\tif (!!val !== !!enabled) {\n\t\t\t\t\t\tif (val) {\n\t\t\t\t\t\t\tenable();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdisable();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabled) {\n\t\t\tenable();\n\t\t}\n\t}\n}\n","import VirtualStick, { VirtualStickInputControl } from '../VirtualStick';\n\nexport default function domView(\n\tcontrol: VirtualStickInputControl,\n\toptions: {\n\t\tinnerRadius?: number;\n\t\tparentElement?: HTMLElement;\n\t\toffsetElement?: HTMLElement;\n\t} = {}\n) {\n\tconst { device } = control;\n\tconst {\n\t\tinnerRadius = Math.max(24, device.radius / 4),\n\t\tparentElement = document.body,\n\t\toffsetElement = device instanceof VirtualStick ? device.element : document.body\n\t} = options;\n\n\tconst outer = document.createElement('div');\n\tObject.assign(outer.style, {\n\t\tposition: 'fixed',\n\t\tpointerEvents: 'none',\n\t\tborderRadius: 999e20 + 'px',\n\n\t\ttransition: 'opacity 0.1s',\n\n\t\t//temp\n\t\tbackgroundColor: 'rgba(128, 128, 128, 0.5)'\n\t});\n\n\tconst inner = document.createElement('div');\n\tObject.assign(inner.style, {\n\t\tposition: 'fixed',\n\t\tpointerEvents: 'none',\n\t\tborderRadius: 999e20 + 'px',\n\n\t\ttransition: 'opacity 0.1s',\n\n\t\t//temp\n\t\tbackgroundColor: 'rgba(128, 128, 128, 0.5)'\n\t});\n\touter.appendChild(inner);\n\n\tlet rafId = 0;\n\n\tfunction render() {\n\t\tconst [x, y] = control.read();\n\n\t\tif (control.device?.mode === 'static' || control.active()) {\n\t\t\tconst outerSize = device.radius * 2;\n\t\t\tconst rect = offsetElement.getBoundingClientRect();\n\t\t\tconst ox = device.x - device.radius + rect.x;\n\t\t\tconst oy = device.y - device.radius + rect.y;\n\n\t\t\touter.style.left = ox + 'px';\n\t\t\touter.style.top = oy + 'px';\n\t\t\touter.style.width = outer.style.height = outerSize + 'px';\n\t\t\touter.style.opacity = '1';\n\n\t\t\tconst innerSize = innerRadius * 2;\n\n\t\t\tconst ix = device.x + x * device.radius - innerRadius + rect.x;\n\t\t\tconst iy = device.y - y * device.radius - innerRadius + rect.y;\n\n\t\t\tinner.style.left = ix + 'px';\n\t\t\tinner.style.top = iy + 'px';\n\t\t\tinner.style.width = inner.style.height = innerSize + 'px';\n\t\t\tinner.style.opacity = '1';\n\t\t} else {\n\t\t\touter.style.opacity = '0';\n\t\t\tinner.style.opacity = '0';\n\t\t}\n\n\t\trafId = requestAnimationFrame(render);\n\t}\n\n\tparentElement.appendChild(outer);\n\n\trafId = requestAnimationFrame(render);\n\n\treturn {\n\t\tdestroy: () => {\n\t\t\tcancelAnimationFrame(rafId);\n\n\t\t\tif (outer.parentNode) {\n\t\t\t\touter.parentNode.removeChild(outer);\n\t\t\t}\n\t\t}\n\t};\n}\n"],"names":["document","body","innerHTML","gamepad","Gamepad","kbd","Keyboard","keyCode","leftTouch","VirtualStick","filter","evt","pageX","Math","max","window","innerWidth","rightTouch","leftStick","getControl","rightStickHoriz","x","kbdWASD","DPadComposite","up","left","down","right","rotateArrowKeys","AxisComposite","negative","positive","leftTouchStick","rightTouchStick","moveAction","Action","bindings","rotateAction","thing","getElementById","y","r","last","performance","now","domView","update","t","delta","value","dx","dy","dr","motionScale","style","transform","requestAnimationFrame","opts","children","get","read","set","onChange","emit","forEach","child","on","Vector2InputControl","VirtualStickInputControl","StickInputControl","options","element","mode","lockX","lockY","touch","pen","mouse","touchActionStyle","radius","enabled","startEvent","lastEvent","startX","startY","deltaX","deltaY","isStatic","supported","navigator","maxTouchPoints","allowedPointerTypes","pointerDown","pointerType","rect","getBoundingClientRect","clientX","clientY","hypot","pointerMove","pointerId","length","divisor","pointerUp","styleElement","enable","touchAction","addEventListener","disable","removeEventListener","name","Object","assign","device","active","destroy","defineProperties","connected","enumerable","configurable","writable","timestamp","timeStamp","val","Device","control","innerRadius","parentElement","offsetElement","outer","createElement","position","pointerEvents","borderRadius","transition","backgroundColor","inner","appendChild","rafId","render","outerSize","ox","oy","top","width","height","opacity","innerSize","ix","iy","cancelAnimationFrame","parentNode","removeChild"],"sourceRoot":""}