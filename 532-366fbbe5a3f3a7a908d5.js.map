{"version":3,"file":"532-366fbbe5a3f3a7a908d5.js","mappings":"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","sources":["webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://@brianchirls/game-input/./src/Action.ts","webpack://@brianchirls/game-input/./src/Device.ts","webpack://@brianchirls/game-input/./src/controls/AxisComposite.ts","webpack://@brianchirls/game-input/./src/controls/AxisInputControl.ts","webpack://@brianchirls/game-input/./src/controls/ButtonInputControl.ts","webpack://@brianchirls/game-input/./src/controls/InputControl.ts","webpack://@brianchirls/game-input/./src/util/copyOptions.ts","webpack://@brianchirls/game-input/./src/processors/stickDeadZone.ts","webpack://@brianchirls/game-input/./src/processors/axisDeadZone.ts","webpack://@brianchirls/game-input/./src/controls/StickInputControl.ts","webpack://@brianchirls/game-input/./src/controls/Vector2InputControl.ts","webpack://@brianchirls/game-input/./src/devices/gamepad/controlMap.ts","webpack://@brianchirls/game-input/./src/devices/Gamepad.ts","webpack://@brianchirls/game-input/./src/util/boolAsNum.ts","webpack://@brianchirls/game-input/./src/devices/Keyboard.ts","webpack://@brianchirls/game-input/./src/util/EventEmitter.ts","webpack://@brianchirls/game-input/./node_modules/mitt/dist/mitt.mjs","webpack://@brianchirls/game-input/./src/util/runProcessors.ts","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://@brianchirls/game-input/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import runProcessors, { Processor } from './util/runProcessors';\nimport InputControl from './controls/InputControl';\nimport EventEmitter from './util/EventEmitter';\n\n/*\ntodo: use something like hrtime or performance.now in node.js\n*/\nconst now = typeof performance === 'undefined' ?\n\t() => performance.now() : // eslint-disable-line no-undef\n\t() => Date.now();\n\ntype ActionEvents = {\n\tupdate: unknown;\n\tchange: unknown;\n\tenable: unknown;\n\tdisable: unknown;\n};\n\nexport interface ActionBindOptions<ValueType> {\n\tcontrol?: InputControl<ValueType>;\n\tprocessors?: Processor<ValueType>[];\n\tautoUpdate?: boolean;\n}\n\ninterface ActionBinding<ValueType> {\n\tcontrol: InputControl<ValueType>;\n\tprocessors?: Processor<ValueType>[];\n}\n\ntype Bindings<ValueType> = (InputControl | ActionBindOptions<ValueType>)[];\n\nexport interface ActionOptions<ValueType> {\n\tbindings?: Bindings<ValueType>;\n\tprocessors?: Processor<ValueType>[];\n\tname?: string;\n\tenabled?: boolean;\n}\n\n/*\ntodo: give everything ids so we can reference them later.\nprobably.\n*/\nexport default class Action<ValueType = number> extends EventEmitter<ActionEvents> {\n\tname: string;\n\tenabled: boolean;\n\tbindings: ActionBinding<ValueType>[];\n\tprocessors: Processor<ValueType>[];\n\treadonly value: ValueType;\n\treadonly activeControl: InputControl<ValueType>;\n\tbind: (control: InputControl<ValueType> | ActionBindOptions<ValueType>, options?: ActionBindOptions<ValueType>) => number;\n\tunbind: (index: number) => void;\n\tupdate: () => void;\n\n\tconstructor(options: Bindings<ValueType> | ActionOptions<ValueType> = {}) {\n\t\tsuper();\n\n\t\tif (Array.isArray(options)) {\n\t\t\toptions = {\n\t\t\t\tbindings: options\n\t\t\t};\n\t\t}\n\n\t\tthis.name = options.name || '';\n\n\t\tconst bindings: ActionBinding<ValueType>[] = [];\n\t\tconst processors: Processor<ValueType>[] = [];\n\n\t\tlet destroyed = false;\n\t\tlet enabled = true;\n\t\tlet activeBinding: ActionBinding<ValueType> = null;\n\t\tlet activeTime = 0; // todo: make this public or get rid of it\n\t\tlet value: ValueType;\n\n\t\tthis.bindings = bindings;\n\t\tthis.processors = processors;\n\n\t\t/*\n\t\ttodo: we need better CRUD methods for bindings and processors\n\t\t*/\n\t\tthis.bind = (control, options) => {\n\t\t\tif (!options && !(control instanceof InputControl)) {\n\t\t\t\toptions = control;\n\t\t\t}\n\t\t\tif (options && options.control) {\n\t\t\t\tcontrol = options.control;\n\t\t\t}\n\n\t\t\tif (!(control instanceof InputControl)) {\n\t\t\t\t// could we do this by duck-typing?\n\t\t\t\tthrow new Error('Binding requires an InputControl');\n\t\t\t}\n\n\t\t\tconst binding = {\n\t\t\t\tcontrol,\n\t\t\t\tprocessors: options && options.processors\n\t\t\t};\n\t\t\tbindings.push(binding);\n\n\t\t\tif (value === undefined) {\n\t\t\t\tconst constructor = Object.getPrototypeOf(control).constructor;\n\t\t\t\tvalue = constructor.defaultValue;\n\t\t\t}\n\n\t\t\tif (options?.autoUpdate !== false) {\n\t\t\t\tcontrol.on('change', this.update);\n\t\t\t}\n\n\t\t\treturn bindings.length - 1;\n\t\t};\n\n\t\tthis.unbind = index => {\n\t\t\tif (index < bindings.length && index >= 0) {\n\t\t\t\tconst binding = bindings[index];\n\t\t\t\tbindings.splice(index, 1);\n\n\t\t\t\tbinding.control.off('change', this.update);\n\t\t\t}\n\t\t};\n\n\t\tthis.update = () => {\n\t\t\tif (!enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst previousValue = value;\n\t\t\tactiveBinding = null;\n\n\t\t\tlet best = -Infinity;\n\t\t\tfor (let i = 0; i < bindings.length; i++) {\n\t\t\t\tconst binding = bindings[i];\n\t\t\t\tconst { control } = binding;\n\t\t\t\tif (control.enabled) {\n\t\t\t\t\tconst controlValue = binding.processors ?\n\t\t\t\t\t\trunProcessors(binding.processors, control.read()) :\n\t\t\t\t\t\tcontrol.read();\n\t\t\t\t\tconst magnitude = control.magnitude(controlValue);\n\t\t\t\t\tif (magnitude > best) {\n\t\t\t\t\t\tvalue = controlValue;\n\t\t\t\t\t\tbest = magnitude;\n\t\t\t\t\t\tif (magnitude > 0) {\n\t\t\t\t\t\t\tactiveBinding = binding;\n\t\t\t\t\t\t\tif (!activeTime) {\n\t\t\t\t\t\t\t\tactiveTime = now();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!activeBinding) {\n\t\t\t\tactiveTime = 0;\n\t\t\t}\n\n\t\t\t// should processor happen before disambiguation?\n\t\t\tif (value !== undefined) {\n\t\t\t\tvalue = runProcessors(processors, value);\n\t\t\t}\n\n\t\t\tthis.emit('update');\n\t\t\tif (value !== previousValue) {\n\t\t\t\tthis.emit('change');\n\t\t\t}\n\t\t};\n\n\t\tconst destroyEventEmitter = this.destroy;\n\t\tthis.destroy = () => {\n\t\t\tdestroyed = true;\n\t\t\tenabled = false;\n\t\t\tdestroyEventEmitter();\n\t\t};\n\n\t\tObject.defineProperties(this, {\n\t\t\tenabled: {\n\t\t\t\tset(val) {\n\t\t\t\t\tval = !!val;\n\t\t\t\t\tif (val !== enabled && !destroyed) {\n\t\t\t\t\t\tenabled = val;\n\t\t\t\t\t\tif (enabled) {\n\t\t\t\t\t\t\tthis.emit('enable');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.emit('disable');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tget: () => enabled\n\t\t\t},\n\t\t\tactiveControl: {\n\t\t\t\tget: () => activeBinding ? activeBinding.control : null\n\t\t\t},\n\t\t\tvalue: {\n\t\t\t\tget: () => value\n\t\t\t}\n\t\t});\n\n\t\tif (options.bindings) {\n\t\t\toptions.bindings.forEach(binding => {\n\t\t\t\tthis.bind(binding);\n\t\t\t});\n\t\t}\n\n\t\tif (options.processors) {\n\t\t\tprocessors.push(...options.processors);\n\t\t}\n\n\t\tif (options.enabled === false) {\n\t\t\tthis.enabled = false;\n\t\t}\n\t}\n}\n","import InputControl from './controls/InputControl';\nimport EventEmitter from './util/EventEmitter';\n\nexport type DeviceOptions = {\n\t/**\n\t * Determines initial value for `.enabled`, whether devices is initially\n\t * enabled upon creation.\n\t *\n\t * default: true\n\t */\n\tenabled?: boolean;\n};\n\nexport type DeviceEvents = {\n\tchange: unknown;\n};\n\n/**\n * An abstract class for hardware devices, such as {@link devices/Keyboard.Keyboard}.\n *\n * Extend this class to create new devices.\n */\nexport abstract class Device<DeviceEventsType extends DeviceEvents = DeviceEvents> extends EventEmitter<DeviceEventsType> {\n\t/**\n\t * Create a new InputControl object attached to the device.\n\t */\n\tgetControl: (name: any, options?: any) => InputControl<any>;\n\n\t/**\n\t * Remove any event listeners and free up any resources.\n\t */\n\tdeclare destroy: () => void;\n\n\t/**\n\t * Devices that are not enabled will not emit any events, and read operations\n\t * will always return the default value, which is typically 0.\n\t */\n\tenabled: boolean;\n\n\t/**\n\t * `true` if device is currently connected.\n\t */\n\treadonly connected: boolean;\n}\n\n\nexport interface ThrottledDeviceOptions extends DeviceOptions {\n\t/**\n\t * For {@link Device.ThrottledDevice | throttled devices}, `updatePeriod` determines the minimal\n\t * length of time between samples. Shorter periods (and therefore higher frequency)\n\t * might improve responsiveness but may impact performance and limit accuracy\n\t * of \"delta\" values between samples.\n\t */\n\tupdatePeriod?: number;\n}\n\n/**\n * An abstract class for devices whose input may be throttled to prevent changes\n * happening too frequently. Derived classes typically take {@link Device.ThrottledDeviceOptions}\n * as a constructor argument.\n *\n * Extend this class to create new throttled devices.\n */\nexport abstract class ThrottledDevice<DeviceEventsType extends DeviceEvents = DeviceEvents> extends Device<DeviceEventsType> {\n\t/**\n\t * The time (DOMHighResTimeStamp) of the last input read from the device hardware,\n\t * in milliseconds, representing time since \"time origin,\" or the beginning of\n\t * the document's lifetime.\n\t */\n\treadonly timestamp: number;\n}\n\n/**\n * An abstract class for devices that require polling, since the underlying hardware\n * API may not provide any events triggered by value changes.\n *\n * Extend this class to create new polling devices.\n */\nexport abstract class PollingDevice<DeviceEventsType extends DeviceEvents = DeviceEvents> extends ThrottledDevice<DeviceEventsType> {\n\t/**\n\t * The `update` method must be called during the game loop, typically `requestAnimationFrame`\n\t * for the device to emit changes and update read values.\n\t */\n\tdeclare update: () => void;\n}\n","import AxisInputControl from './AxisInputControl';\nimport { InputControlOptions } from './InputControl';\n\nexport interface AxisCompositeOptions extends InputControlOptions<number> {\n\tnegative: AxisInputControl;\n\tpositive: AxisInputControl;\n}\n\nexport default class AxisComposite extends AxisInputControl {\n\tconstructor(options: AxisCompositeOptions) {\n\t\tconst {\n\t\t\tnegative,\n\t\t\tpositive,\n\t\t\t...opts\n\t\t} = options;\n\t\tconst read = () => {\n\t\t\tconst neg = this.children.get('negative').read();\n\t\t\tconst pos = this.children.get('positive').read();\n\t\t\treturn pos - neg;\n\t\t};\n\t\tsuper(read, opts);\n\n\t\tthis.children.set('negative', negative);\n\t\tthis.children.set('positive', positive);\n\n\t\tconst onChange = () => this.emit('change');\n\t\tthis.children.forEach(child => {\n\t\t\tchild.on('change', onChange);\n\t\t});\n\t}\n}\n","import InputControl, { InputControlOptions } from './InputControl';\n\nexport default class AxisInputControl extends InputControl<number> {\n\taxis: () => number;\n\tconstructor(read: (() => number) | InputControlOptions<number>, options: InputControlOptions<number>) {\n\t\tif (read && typeof read !== 'function' && !options) {\n\t\t\toptions = read;\n\t\t\tread = null;\n\t\t}\n\n\t\tsuper(<(() => number)>read, options);\n\t\tthis.axis = this.read;\n\t}\n}\n","import AxisInputControl from './AxisInputControl';\nimport { InputControlOptions } from './InputControl';\n\nexport interface ButtonInputControlOptions extends InputControlOptions<number> {\n\tpressPoint?: number;\n}\n\nexport default class ButtonInputControl extends AxisInputControl {\n\tpressPoint = 0.5;\n\n\tconstructor(read: (() => number) | ButtonInputControlOptions, options?: ButtonInputControlOptions) {\n\t\tif (read && typeof read === 'object' && !options) {\n\t\t\toptions = read;\n\t\t\tread = null;\n\t\t}\n\n\t\tsuper(read, options);\n\t\tif (options?.pressPoint !== undefined) {\n\t\t\tthis.pressPoint = options?.pressPoint;\n\t\t}\n\t}\n\n\tpressed(value = this.magnitude()) {\n\t\treturn value >= this.pressPoint;\n\t}\n}\n","import runProcessors, { Processor } from '../util/runProcessors';\nimport copyOptions from '../util/copyOptions';\nimport EventEmitter from '../util/EventEmitter';\n\ntype InputControlEvents = {\n\tchange: unknown\n};\n\nexport interface InputControlOptions<T> {\n\tname?: string;\n\tparent?: InputControl;\n\tenabled?: boolean;\n\tdevice?: any;\n\n\tprocessors?: Processor<T>[];\n\tchildren?: Map<string, InputControl> | [string, InputControl][] | { [k: string]: InputControl };\n\n\t/**\n\t * callback function to check control's state and determine\n\t * whether it's currently \"active\".\n\t *\n\t * By default, a control is active if the magnitude of the current\n\t * value is greater than zero.\n\t */\n\tactive?: (ic: InputControl<T>) => boolean;\n}\n/**\n * Base class from which all controls are derived.\n */\nexport default class InputControl<T = any> extends EventEmitter<InputControlEvents> {\n\tstatic defaultValue: any = 0;\n\n\tname = '';\n\tparent: InputControl = null;\n\tenabled = true;\n\tchildren = new Map<string, InputControl>();\n\tdevice: any = null;\n\tprocessors = [] as Processor<T>[];\n\n\t/**\n\t * InputControl constructor\n\t * @param readRaw (optional) callback function to read unprocessed value. overrides read method\n\t * @param options options object\n\t */\n\tconstructor(readRaw?: (() => T), options?: InputControlOptions<T>)\n\n\t/**\n\t * InputControl constructor\n\t * @param options options object\n\t */\n\tconstructor(options?: InputControlOptions<T>)\n\tconstructor(readRaw?: (() => T) | InputControlOptions<T>, options?: InputControlOptions<T>) {\n\t\tsuper();\n\n\t\tif (readRaw && typeof readRaw === 'object' && !options) {\n\t\t\toptions = readRaw;\n\t\t\treadRaw = undefined;\n\t\t}\n\n\t\tconst {\n\t\t\tprocessors,\n\t\t\tchildren,\n\t\t\tactive,\n\t\t\t...opts\n\t\t} = options || {};\n\n\t\tcopyOptions(this, opts);\n\n\t\tif (this.device) {\n\t\t\tthis.device.on('change', () => {\n\t\t\t\tif (this.enabled) {\n\t\t\t\t\tthis.emit('change');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (processors) {\n\t\t\tfor (const p of processors) {\n\t\t\t\tthis.processors.push(p);\n\t\t\t}\n\t\t}\n\n\t\tif (children) {\n\t\t\tconst iterable = Array.isArray(children) || children instanceof Map ?\n\t\t\t\tchildren :\n\t\t\t\tObject.entries(children);\n\t\t\tfor (const [key, value] of iterable) {\n\t\t\t\tthis.children.set(key, value);\n\t\t\t}\n\t\t}\n\n\t\tconst readUnprocessed = readRaw || this.read.bind(this);\n\t\tconst read = () => runProcessors(this.processors, readUnprocessed());\n\n\t\tthis.read = () => {\n\t\t\treturn this.enabled ?\n\t\t\t\tread() :\n\t\t\t\tObject.getPrototypeOf(this).constructor.defaultValue;\n\t\t};\n\n\t\tif (typeof active === 'function') {\n\t\t\tthis.active = () => active(this);\n\t\t}\n\n\t\tconst destroy = this.destroy;\n\t\tthis.destroy = () => {\n\t\t\tdestroy();\n\t\t\tthis.children.forEach(child => child.destroy());\n\t\t};\n\t}\n\n\t/**\n\t * Find a descendent control\n\t * @param path slash ('/') delimited list of keys to follow through descendent controls\n\t * @returns a descendent control. null it not found\n\t */\n\tfind(path?: string): InputControl | null {\n\t\tif (!path) {\n\t\t\treturn this;\n\t\t}\n\n\t\tconst i = path.indexOf('/');\n\t\tif (i > 0) {\n\t\t\tconst k = path.substring(0, i);\n\t\t\tconst child = this.children.get(k);\n\t\t\tif (child) {\n\t\t\t\treturn child.find(path.substring(i + 1));\n\t\t\t}\n\t\t}\n\n\t\treturn this.children.get(path) || null;\n\t}\n\n\t/**\n\t * @returns The control's current value\n\t */\n\tread(): T {\n\t\treturn Object.getPrototypeOf(this).constructor.defaultValue;\n\t}\n\n\t/**\n\t * Determines the magnitude of the given value\n\t *\n\t * @param val (optional) defaults to control's current value\n\t * @returns the magnitude of the given value\n\t */\n\tmagnitude(val = this.read()) {\n\t\treturn typeof val === 'number' ? Math.abs(val) : 0;\n\t}\n\n\tactive() {\n\t\treturn this.magnitude() > 0;\n\t}\n}\n","export default function copyOptions(dest: { [x: string]: any; }, src: { [x: string]: any; }) {\n\tif (!src) {\n\t\treturn;\n\t}\n\tObject.keys(dest).forEach(key => {\n\t\tif (key in src && typeof dest[key] !== 'function') {\n\t\t\tdest[key] = src[key];\n\t\t}\n\t});\n}\n\n","import axisDeadZone from './axisDeadZone';\n\nexport default function stickDeadZone(value: [number, number], min: number, max: number) {\n\tconst [x, y] = value;\n\tconst magnitude = Math.hypot(x, y);\n\tconst newMagnitude = axisDeadZone(magnitude, min, max);\n\n\tif (newMagnitude === 0) {\n\t\treturn [0, 0];\n\t}\n\n\tconst scale = newMagnitude / magnitude;\n\treturn [x * scale, y * scale];\n}\n","export default function axisDeadZone(value: number, min = 0.125, max = 0.925) {\n\tconst absValue = Math.abs(value);\n\tif (absValue < min) {\n\t\treturn 0;\n\t}\n\tif (absValue > max) {\n\t\treturn Math.sign(value);\n\t}\n\n\treturn Math.sign(value) * (absValue - min) / (max - min);\n}\n","import Vector2InputControl, { Vector2InputControlOptions } from './Vector2InputControl';\nimport ButtonInputControl, { ButtonInputControlOptions } from './ButtonInputControl';\nimport stickDeadZone from '../processors/stickDeadZone';\n\nfunction getChildValue(read: () => number[], axis: number, neg: boolean) {\n\tconst vec = read();\n\tconst rawAxisValue = vec[axis];\n\treturn Math.max(0, neg ? -rawAxisValue : rawAxisValue);\n}\n\nfunction makeChild(parent: StickInputControl, name: string, axis: number, negative: boolean, options: ButtonInputControlOptions) {\n\tconst opts = Object.assign({}, options && options[name], {\n\t\tparent,\n\t\tdevice: parent.device\n\t});\n\tparent[name] = new ButtonInputControl(() => getChildValue(parent.read, axis, negative), opts);\n\n\tparent.children.set(name, parent[name]);\n}\n\nconst childbuttons = [\n\t['left', 0, true],\n\t['right', 0, false],\n\t['down', 1, true],\n\t['up', 1, false]\n] as [string, number, boolean][];\n\nexport type StickInputControlOptions = Vector2InputControlOptions & ButtonInputControlOptions;\n\nexport default class StickInputControl extends Vector2InputControl {\n\tconstructor(read: (() => [number, number]) | StickInputControlOptions, options?: StickInputControlOptions) {\n\t\tif (read && typeof read === 'object' && !options) {\n\t\t\toptions = read;\n\t\t\tread = null;\n\t\t}\n\n\t\tsuper(read, Object.assign(\n\t\t\t{\n\t\t\t\tprocessors: [stickDeadZone]\n\t\t\t},\n\t\t\toptions\n\t\t));\n\n\t\tchildbuttons.forEach(([name, axis, negative]) => {\n\t\t\tmakeChild(this, name, axis, negative, options);\n\t\t});\n\n\t\tconst onChange = () => this.emit('change');\n\t\tthis.children.forEach(child => {\n\t\t\tchild.on('change', onChange);\n\t\t});\n\t}\n}\n","import InputControl, { InputControlOptions } from './InputControl';\nimport AxisInputControl from './AxisInputControl';\n\nexport interface Vector2InputControlOptions extends InputControlOptions<[number, number]> {\n\tx?: InputControlOptions<number>;\n\ty?: InputControlOptions<number>;\n}\n\nexport default class Vector2InputControl extends InputControl<[number, number]> {\n\tstatic defaultValue = [0, 0] as [number, number];\n\tvector2: () => [number, number];\n\tx: AxisInputControl;\n\ty: AxisInputControl;\n\n\tconstructor(read?: (() => [number, number]) | Vector2InputControlOptions, options?: Vector2InputControlOptions) {\n\t\tif (read && typeof read === 'object' && !options) {\n\t\t\toptions = read;\n\t\t\tread = null;\n\t\t}\n\n\t\tconst {\n\t\t\tx: xOptions,\n\t\t\ty: yOptions,\n\t\t\t...opts\n\t\t} = options || {};\n\n\t\tsuper(<(() => [number, number])>read, opts);\n\n\t\tthis.vector2 = this.read;\n\t\tthis.x = new AxisInputControl(\n\t\t\t() => this.read()[0],\n\t\t\tObject.assign({}, xOptions, {\n\t\t\t\tparent: this,\n\t\t\t\tdevice: options?.device\n\t\t\t})\n\t\t);\n\n\t\t// i don't know why this is negative, but it is\n\t\tthis.y = new AxisInputControl(\n\t\t\t() => this.read()[1],\n\t\t\tObject.assign({}, yOptions, {\n\t\t\t\tparent: this,\n\t\t\t\tdevice: options?.device\n\t\t\t})\n\t\t);\n\t\tthis.children.set('x', this.x);\n\t\tthis.children.set('y', this.x);\n\n\t\tconst onChange = () => this.emit('change');\n\t\tthis.children.forEach(child => {\n\t\t\tchild.on('change', onChange);\n\t\t});\n\t}\n\n\tmagnitude(vec = this.read()) {\n\t\treturn Math.hypot(vec[0], vec[1]);\n\t}\n\n\tactive() {\n\t\tconst vec = this.read();\n\t\treturn vec[0] !== 0 || vec[1] !== 0;\n\t}\n}\n","const buttonIndexes = {\n\tdpadUp: 12,\n\tdpadDown: 13,\n\tdpadLeft: 14,\n\tdpadRight: 15,\n\tL1: 4,\n\tL2: 6,\n\tL3: 10,\n\tR1: 5,\n\tR2: 7,\n\tR3: 11,\n\tA: 0,\n\tB: 1,\n\tX: 2,\n\tY: 3,\n\tstart: 9,\n\tselect: 8,\n\thome: 16\n};\nconst buttons = [] as string[];\nObject.keys(buttonIndexes).forEach(key => {\n\tbuttons[buttonIndexes[key]] = key;\n});\n\nconst axes = [\n\t'leftStickX',\n\t'leftStickY',\n\t'rightStickX',\n\t'rightStickY'\n];\n\nconst sticks = [\n\t'leftStick',\n\t'rightStick'\n];\n\nexport {\n\tbuttons,\n\tbuttonIndexes,\n\taxes,\n\tsticks\n};\n","import {\n\tbuttons,\n\tbuttonIndexes,\n\tsticks\n} from './gamepad/controlMap';\nimport ButtonInputControl, { ButtonInputControlOptions } from '../controls/ButtonInputControl';\nimport StickInputControl, { StickInputControlOptions } from '../controls/StickInputControl';\nimport AxisInputControl from '../controls/AxisInputControl';\nimport { InputControlOptions } from '../controls/InputControl';\nimport { DeviceEvents, PollingDevice, ThrottledDeviceOptions } from '../Device';\nimport { WildcardHandler } from 'mitt';\n\nconst standardControlNames = new Set(buttons);\nsticks.forEach(n => standardControlNames.add(n));\n\n// todo: make this actually use InputControl\ntype InputControlConstructor = InstanceType<any>;\n// type InputControlConstructor = {\n// \tnew (): InputControl\n// };\ntype DeviceReader = (device: any, index: number) => any\n\nconst readers = new Map<InputControlConstructor, DeviceReader>([\n\t[ButtonInputControl, (device, buttonIndex) => device.buttons[buttonIndex].value],\n\t[StickInputControl, (device, leftAxisIndex) => [\n\t\tdevice.axes[leftAxisIndex],\n\t\t-device.axes[leftAxisIndex + 1]\n\t]],\n\t[AxisInputControl, (device, axisIndex) => device.axes[axisIndex]]\n]);\n\ntype GamepadEvents = DeviceEvents & {\n\tconnected: undefined;\n\tdisconnected: undefined;\n}\n\nexport interface GamepadOptions extends ThrottledDeviceOptions {\n\tindex?: number;\n}\n\n/**\n * Emitted when a Gamepad device is connected.\n * @event\n */\nexport type OnConnected = () => void;\n\n/**\n * Available options depend on which control is requested.\n */\nexport type GamepadGetControlOptions = Omit<ButtonInputControlOptions | StickInputControlOptions | InputControlOptions<number>, 'device' | 'children'>;\n\n/**\n * A Device driven by the [Web Gamepad API](https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API/Using_the_Gamepad_API).\n *\n * Currently a [Standard Gamepad mapping](https://w3c.github.io/gamepad/#dfn-standard-gamepad) is assumed.\n *\n * Note that since the Gamepad API does not currently support change events,\n * this is a polling device and therefore requires calling `.update()` repeatedly\n * to update values and emit change events.\n */\nexport default class Gamepad extends PollingDevice<GamepadEvents> {\n\tdeclare getControl: {\n\t\t/** Two-dimensional stick inputs */\n\t\t(name: 'leftStick' | 'rightStick', options?: GamepadGetControlOptions): StickInputControl;\n\n\t\t/** One-dimensional, single axis of each stick */\n\t\t(name: 'leftStickX' | 'leftStickY' | 'rightStickX' | 'rightStickY', options?: GamepadGetControlOptions): AxisInputControl;\n\n\t\t/** Buttons. Some provide partial, \"analog\" values while others are either pressed or not. */\n\t\t(name: keyof typeof buttonIndexes, options?: GamepadGetControlOptions): ButtonInputControl;\n\t};\n\n\t/** [Gamepad API](https://developer.mozilla.org/en-US/docs/Web/API/Gamepad) object */\n\treadonly device: globalThis.Gamepad;\n\n\t/**\n\t * A string containing some information about the controller, provided\n\t * by the browser. Empty if no Gamepad device has been connected.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * returns an Iterable of available control names.\n\t */\n\tcontrols: () => IterableIterator<string>;\n\n\tdeclare on: {\n\t\t/**\n\t\t * Emitted when the Gamepad device is connected.\n\t\t * @event\n\t\t */\n\t\t(type: 'connected', handler: OnConnected): void;\n\n\t\t/**\n\t\t * Emitted when the Gamepad device is disconnected.\n\t\t * @event\n\t\t */\n\t\t(type: 'disconnected', handler: () => void): void;\n\n\t\t/**\n\t\t * Emitted when any value changes.\n\t\t * @event\n\t\t */\n\t\t(type: 'change', handler: () => void): void;\n\n\t\t(type: '*', handler: WildcardHandler<GamepadEvents>): void;\n\t};\n\n\tconstructor(options: GamepadOptions = {}) {\n\t\tconst {\n\t\t\tupdatePeriod = 1000 / 120,\n\t\t\tindex = 0\n\t\t} = options;\n\t\tlet {\n\t\t\tenabled = true\n\t\t} = options;\n\n\t\tsuper();\n\n\t\tconst controlDefs = new Map<string, InputControlConstructor>();\n\t\tconst controlIndices = new Map();\n\t\tlet lastDevice: globalThis.Gamepad = null;\n\t\tlet lastDeviceUpdate = 0;\n\n\t\tbuttons.forEach((buttonName, i) => {\n\t\t\tcontrolDefs.set(buttonName, ButtonInputControl);\n\t\t\tcontrolIndices.set(buttonName, i);\n\t\t});\n\n\t\tsticks.forEach((stickName, i) => {\n\t\t\tcontrolDefs.set(stickName, StickInputControl);\n\t\t\tcontrolIndices.set(stickName, i * 2);\n\t\t});\n\n\t\tconst update = () => {\n\t\t\tif (enabled) {\n\t\t\t\tconst device = navigator.getGamepads()[index];\n\t\t\t\tconst timestamp = device && device.timestamp || performance.now();\n\t\t\t\tif (device && timestamp - lastDeviceUpdate >= updatePeriod) {\n\t\t\t\t\tlastDevice = device;\n\t\t\t\t\tlastDeviceUpdate = timestamp;\n\t\t\t\t\tthis.emit('change');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfunction connectGamePad(gp: globalThis.Gamepad) {\n\t\t\tif (gp) {\n\t\t\t\tupdate();\n\n\t\t\t\t// set any additional buttons or axes\n\t\t\t\tfor (let i = buttons.length; i < gp.buttons.length; i++) {\n\t\t\t\t\tconst name = 'button' + i;\n\t\t\t\t\tcontrolDefs.set(name, ButtonInputControl);\n\t\t\t\t\tcontrolIndices.set(name, i);\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 4; i < gp.axes.length; i++) {\n\t\t\t\t\tconst name = 'axis' + i;\n\t\t\t\t\tcontrolDefs.set(name, AxisInputControl);\n\t\t\t\t\tcontrolIndices.set(name, i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction disconnectGamepad() {\n\t\t\t// remove any extra controls\n\t\t\tcontrolDefs.forEach((def, key) => {\n\t\t\t\tif (!standardControlNames.has(key)) {\n\t\t\t\t\tcontrolDefs.delete(key);\n\t\t\t\t\tcontrolIndices.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tconst onConnected = (evt: GamepadEvent) => {\n\t\t\tconst gp = evt.gamepad;\n\t\t\tif (gp.index === index) {\n\t\t\t\tconnectGamePad(gp);\n\n\t\t\t\tthis.emit('connected');\n\t\t\t}\n\t\t};\n\n\t\tconst onDisconnected = (evt: GamepadEvent) => {\n\t\t\tconst gp = evt.gamepad;\n\t\t\tif (gp.index === index) {\n\t\t\t\tdisconnectGamepad();\n\n\t\t\t\tthis.emit('disconnected');\n\t\t\t}\n\t\t};\n\n\t\tthis.getControl = (name: string, options?: GamepadGetControlOptions) => {\n\t\t\tconst ControlConstructor = controlDefs.get(name);\n\t\t\tif (!ControlConstructor) {\n\t\t\t\tthrow new Error('Control not found');\n\t\t\t}\n\n\t\t\tconst reader = readers.get(ControlConstructor);\n\t\t\tconst index = controlIndices.get(name);\n\t\t\tconst read = () => {\n\t\t\t\tupdate();\n\t\t\t\treturn lastDevice ?\n\t\t\t\t\treader(lastDevice, index) :\n\t\t\t\t\tControlConstructor.defaultValue;\n\t\t\t};\n\n\t\t\treturn new ControlConstructor(read, Object.assign({\n\t\t\t\tname\n\t\t\t}, options, {\n\t\t\t\tdevice: this,\n\t\t\t\tchildren: null\n\t\t\t}));\n\t\t};\n\n\t\tthis.controls = () => controlDefs.keys();\n\n\t\tthis.update = update;\n\n\t\tconst destroyEventEmitter = this.destroy;\n\t\tthis.destroy = () => {\n\t\t\tdestroyEventEmitter();\n\t\t\twindow.removeEventListener('gamepadconnected', onConnected);\n\t\t\twindow.removeEventListener('gamepaddisconnected', onDisconnected);\n\t\t};\n\n\t\tObject.defineProperties(this, {\n\t\t\tdevice: {\n\t\t\t\tget: () => lastDevice\n\t\t\t},\n\t\t\tid: {\n\t\t\t\tget: () => lastDevice && lastDevice.id || ''\n\t\t\t},\n\t\t\tconnected: {\n\t\t\t\tget: () => !!lastDevice && lastDevice.connected\n\t\t\t},\n\t\t\ttimestamp: {\n\t\t\t\tget: () => lastDeviceUpdate\n\t\t\t},\n\t\t\tenabled: {\n\t\t\t\tget: () => enabled,\n\t\t\t\tset(val) {\n\t\t\t\t\tenabled = !!val;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tupdate();\n\t\twindow.addEventListener('gamepadconnected', onConnected);\n\t\twindow.addEventListener('gamepaddisconnected', onDisconnected);\n\t}\n}\n","const boolAsNum = (fn: () => any) =>\n\t() => fn() ? 1 : 0;\nexport default boolAsNum;\n","import ButtonInputControl, { ButtonInputControlOptions } from '../controls/ButtonInputControl';\nimport boolAsNum from '../util/boolAsNum';\nimport { Device, DeviceEvents, DeviceOptions } from '../Device';\nimport { WildcardHandler } from 'mitt';\n\nexport interface KeyboardDeviceOptions extends DeviceOptions {\n\t/**\n\t * Optionally use layout-independent Key Code instead of\n\t * key value string. (default: `true`)\n\t *\n\t * Key Codes:\n\t * https://www.w3.org/TR/uievents-code/#code-value-tables\n\t *\n\t * If false, use key values:\n\t * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\n\t */\n\tkeyCode?: boolean;\n}\n\nexport interface KeyboardGetControlOptions extends Omit<ButtonInputControlOptions, 'device' | 'children'> {\n\t/**\n\t * filter may be one of the following:\n\t * - string: name of code (or key value)\n\t * - array of strings: responds to any of the keys in the array\n\t * - function: a callback that gets called with a Set of active key names and\n\t * is expected to return a boolean, whether or not to respond to the keyboard event.\n\t */\n\tfilter?: string | string[] | ((keys: Set<string>) => boolean)\n}\n\ntype KeyboardEvents = DeviceEvents & {\n\tenable: undefined;\n\tdisable: undefined;\n}\n\n/**\n * A Keyboard device.\n */\nexport default class Keyboard extends Device<KeyboardEvents> {\n\t/**\n\t * Create a {@link controls/ButtonInputControl.ButtonInputControl | button control} for a single key or combination of keys.\n\t * Key names correspond to the [names used by DOM `KeyboardEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values).\n\t *\n\t * @param name The name of the control. If no `filter` option is provided, this\n\t * also specifies which key on the keyboard to use.\n\t */\n\tdeclare getControl: (name: string, options?: KeyboardGetControlOptions) => ButtonInputControl;\n\n\tdeclare on: {\n\t\t/**\n\t\t * Emitted when the Device is set to enabled\n\t\t * @event\n\t\t */\n\t\t(type: 'enable', handler: () => void): void;\n\n\t\t/**\n\t\t * Emitted when the Device is set to disabled\n\t\t * @event\n\t\t */\n\t\t(type: 'disable', handler: () => void): void;\n\n\t\t/**\n\t\t * Emitted when any value changes.\n\t\t * @event\n\t\t */\n\t\t(type: 'change', handler: () => void): void;\n\n\t\t(type: '*', handler: WildcardHandler<KeyboardEvents>): void;\n\t};\n\n\t/**\n\t * Always true.\n\t */\n\tdeclare readonly connected: boolean;\n\n\t/**\n\t * @param keyboardOptions options\n\t */\n\tconstructor(keyboardOptions?: KeyboardDeviceOptions) {\n\t\tsuper();\n\n\t\tlet destroyed = false;\n\t\tlet enabled = false;\n\t\tconst keyCode = keyboardOptions?.keyCode !== false;\n\n\t\tconst keysDown = new Set<string>();\n\n\t\tconst onKeyDown = (evt: KeyboardEvent) => {\n\t\t\tconst key = keyCode ? evt.code : evt.key;\n\t\t\tkeysDown.add(key);\n\t\t\tkeysDown.add(key.toLowerCase());\n\t\t\tthis.emit('change');\n\t\t};\n\t\tconst onKeyUp = (evt: KeyboardEvent) => {\n\t\t\tconst key = keyCode ? evt.code : evt.key;\n\t\t\tkeysDown.delete(key);\n\t\t\tkeysDown.delete(key.toLowerCase());\n\t\t\tthis.emit('change');\n\t\t};\n\n\t\tfunction readAnyKey() {\n\t\t\treturn keysDown.size > 0;\n\t\t}\n\n\t\tfunction readSingleKey(key: string) {\n\t\t\treturn keysDown.has(key.toLowerCase());\n\t\t}\n\n\t\tfunction readFilterKey(filter: (keys: Set<string>) => boolean) {\n\t\t\treturn readAnyKey() && filter(new Set<string>(keysDown));\n\t\t}\n\n\t\tfunction readArrayKey(keys: string[]) {\n\t\t\treturn keys.some(readSingleKey);\n\t\t}\n\n\t\tconst enable = (emitEvent = false) => {\n\t\t\tif (!enabled) {\n\t\t\t\tenabled = true;\n\t\t\t\twindow.addEventListener('keydown', onKeyDown);\n\t\t\t\twindow.addEventListener('keyup', onKeyUp);\n\t\t\t\tif (emitEvent) {\n\t\t\t\t\tthis.emit('enable');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst disable = (emitEvent = false) => {\n\t\t\tif (enabled) {\n\t\t\t\tenabled = false;\n\t\t\t\tkeysDown.clear();\n\t\t\t\twindow.removeEventListener('keydown', onKeyDown);\n\t\t\t\twindow.removeEventListener('keyup', onKeyUp);\n\t\t\t\tif (emitEvent) {\n\t\t\t\t\tthis.emit('disable');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.getControl = (name: string, options = {}) => {\n\t\t\tconst {\n\t\t\t\tfilter = name,\n\t\t\t\t...opts\n\t\t\t} = options;\n\n\t\t\tlet read = readAnyKey;\n\t\t\tif (filter) {\n\t\t\t\tif (typeof filter === 'string') {\n\t\t\t\t\tread = () => readSingleKey(filter);\n\t\t\t\t} else if (typeof filter === 'function') {\n\t\t\t\t\tread = () => readFilterKey(filter);\n\t\t\t\t} else if (Array.isArray(filter)) {\n\t\t\t\t\tread = () => readArrayKey(filter);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new ButtonInputControl(boolAsNum(read), Object.assign({\n\t\t\t\tname: options.filter ?\n\t\t\t\t\tString(name || filter) :\n\t\t\t\t\ttypeof filter === 'string' && filter ?\n\t\t\t\t\t\t`key:${filter}` :\n\t\t\t\t\t\tString(name || filter || 'any key')\n\t\t\t}, opts, {\n\t\t\t\tdevice: this,\n\t\t\t\tchildren: null\n\t\t\t}));\n\t\t};\n\n\t\tconst destroyEventEmitter = this.destroy;\n\t\tthis.destroy = () => {\n\t\t\tdestroyed = true;\n\t\t\tdestroyEventEmitter();\n\t\t\tdisable();\n\t\t};\n\n\t\t// assume keyboard is always connected\n\t\tObject.defineProperties(this, {\n\t\t\tconnected: {\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: false,\n\t\t\t\twritable: false,\n\t\t\t\tvalue: true\n\t\t\t},\n\t\t\tenabled: {\n\t\t\t\tget: () => enabled,\n\t\t\t\tset(val) {\n\t\t\t\t\tif (val && !destroyed) {\n\t\t\t\t\t\tenable(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdisable(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (keyboardOptions?.enabled !== false) {\n\t\t\tenable();\n\t\t}\n\t}\n}\n","import mitt, {\n\tHandler,\n\tWildcardHandler\n} from 'mitt';\n\ntype EventsBase = { [k: string]: unknown };\n\nexport default class EventEmitter<Events extends EventsBase> {\n\ton: {\n\t\t<Key extends keyof Events>(type: Key, handler: Handler<Events[Key]>): void;\n\t\t(type: '*', handler: WildcardHandler<Events>): void;\n\t};\n\toff: {\n\t\t<Key extends keyof Events>(type: Key, handler: Handler<Events[Key]>): void;\n\t\t(type: '*', handler: WildcardHandler<Events>): void;\n\t};\n\tprotected emit: {\n\t\t<Key extends keyof Events>(type: Key, event: Events[Key]): void;\n\t\t<Key extends keyof Events>(type: undefined extends Events[Key] ? Key : never): void;\n\t};\n\tdestroy: () => void;\n\n\tconstructor() {\n\t\tconst {\n\t\t\tall,\n\t\t\ton,\n\t\t\toff,\n\t\t\temit\n\t\t} = mitt<Events>();\n\n\t\tthis.on = on;\n\t\tthis.off = off;\n\t\tthis.emit = emit;\n\t\tthis.destroy = () => all.clear();\n\t}\n}","export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n","const reduce = <T, >(prev: T, fn: (x: T) => T) =>\n\tfn(prev);\n\nexport type Processor<T> = (x: T) => T;\n\nexport default function runProcessors<T>(processors: Processor<T>[], initialValue: T) {\n\treturn processors.reduce(reduce, initialValue);\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","now","performance","Date","Action","options","bindings","name","value","processors","destroyed","enabled","activeBinding","activeTime","bind","control","InputControl","Error","binding","push","undefined","constructor","Object","getPrototypeOf","defaultValue","autoUpdate","on","update","length","unbind","index","splice","off","previousValue","best","i","controlValue","runProcessors","read","magnitude","emit","destroyEventEmitter","destroy","defineProperties","set","val","this","get","activeControl","forEach","EventEmitter","Device","PollingDevice","AxisComposite","negative","positive","opts","neg","children","onChange","child","AxisInputControl","axis","ButtonInputControl","pressPoint","readRaw","Map","dest","src","active","keys","key","device","p","entries","readUnprocessed","path","indexOf","k","substring","find","Math","abs","stickDeadZone","min","max","x","y","hypot","newMagnitude","absValue","sign","axisDeadZone","scale","childbuttons","StickInputControl","assign","parent","rawAxisValue","getChildValue","makeChild","Vector2InputControl","xOptions","yOptions","vector2","vec","buttonIndexes","dpadUp","dpadDown","dpadLeft","dpadRight","L1","L2","L3","R1","R2","R3","A","B","X","Y","start","select","home","buttons","sticks","standardControlNames","Set","n","add","readers","buttonIndex","leftAxisIndex","axes","axisIndex","Gamepad","updatePeriod","controlDefs","controlIndices","lastDevice","lastDeviceUpdate","buttonName","stickName","navigator","getGamepads","timestamp","connectGamePad","gp","disconnectGamepad","def","has","onConnected","evt","gamepad","onDisconnected","getControl","ControlConstructor","reader","controls","window","removeEventListener","id","connected","addEventListener","fn","Keyboard","keyboardOptions","keyCode","keysDown","onKeyDown","code","toLowerCase","onKeyUp","readAnyKey","size","readSingleKey","readFilterKey","filter","readArrayKey","some","enable","emitEvent","disable","clear","boolAsNum","String","enumerable","configurable","writable","all","t","e","slice","map","reduce","prev","initialValue","_arrayLikeToArray","len","arr2","_assertThisInitialized","self","ReferenceError","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","defineProperty","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","_getPrototypeOf","o","setPrototypeOf","__proto__","_setPrototypeOf","_inherits","subClass","superClass","create","_objectWithoutProperties","source","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","_possibleConstructorReturn","_slicedToArray","_i","_s","_e","_arr","_n","_d","next","done","err","_typeof","_unsupportedIterableToArray","minLen","toString","test"],"sourceRoot":""}